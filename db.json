{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"themes/polarbear/source/favicon.ico","path":"favicon.ico","modified":1,"renderable":1},{"_id":"themes/polarbear/source/css/style.scss","path":"css/style.scss","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/blank.gif","path":"lib/fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading.gif","path":"lib/fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite@2x.png","path":"lib/fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_overlay.png","path":"lib/fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite.png","path":"lib/fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading@2x.gif","path":"lib/fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.css","path":"lib/fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.js","path":"lib/fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.pack.js","path":"lib/fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/js/src/theme.js","path":"js/src/theme.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/jquery/jquery-3.1.1.min.js","path":"lib/jquery/jquery-3.1.1.min.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/fancybox_buttons.png","path":"lib/fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-media.js","path":"lib/fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"01b357ba623baeec46522fee85f17482cd0606a6","modified":1553482850554},{"_id":"themes/polarbear/.eslintrc","hash":"38131da004ee91a91f25644508b377b261f59687","modified":1553493950933},{"_id":"themes/polarbear/LICENSE","hash":"6fd796a4c624297885ceed920ac7130a96f29a85","modified":1553493950933},{"_id":"themes/polarbear/_config.yml","hash":"87dc9d1a30ab9aecfbe85313c9b7e3d43891c81f","modified":1553496609294},{"_id":"themes/polarbear/README.md","hash":"28051a9876e18c26675101c671828e24930acba9","modified":1553493950933},{"_id":"themes/polarbear/package.json","hash":"645cc09cf8cfa5298aa897c1b7ec7d9605deaa81","modified":1553493950940},{"_id":"source/_posts/2017.md","hash":"541b250085bf676c52872072c51ada9fb41a11b0","modified":1553497563884},{"_id":"source/_posts/偷影子的人.md","hash":"47990e60b46a1b3a6a48a68c571ea60f1814835f","modified":1553497284691},{"_id":"source/_posts/API.md","hash":"5c8b41860e749759de80233a7e6f6ea5b702414d","modified":1553497497699},{"_id":"source/_posts/springboot-swagger.md","hash":"aab73b2d42edc30f0a12350e690023052ae0ba28","modified":1553497484212},{"_id":"source/_posts/我们仨.md","hash":"8e3f6cd330deaaf81e71e7726bca0b78798672eb","modified":1553497289133},{"_id":"source/_posts/浅读《乌合之众》-《厚黑学》.md","hash":"f5dd145bf07ef98921bf97f2196129df47b46854","modified":1553497583656},{"_id":"source/_posts/数据科学.md","hash":"c84f93eb6a5389bb213877d99a9d7bfd28afb917","modified":1553497608484},{"_id":"source/_posts/项目组目前的GIT管理方式.md","hash":"a7179970066fd9c05a5a33b0e3c53b85f774bd4d","modified":1553497544036},{"_id":"source/_posts/程序员当产品经理是一种什么样的体验.md","hash":"2cf048d867e46a3721a102916df464a4ffc4cace","modified":1553497430847},{"_id":"source/categories/index.md","hash":"ae1b28627bd2036ea93cd62f9efa4b1de587c7f4","modified":1509610284000},{"_id":"source/about/index.md","hash":"13604db1eae20d417e110b4d1a5c3d4cbd069d9b","modified":1553497932291},{"_id":"source/tags/index.md","hash":"de901444244069df08919f4d05f20632db12dd2b","modified":1509610264000},{"_id":"source/_posts/icon-font.md","hash":"d5e8e03baf4937f5ca7d3910e915b08bc7199daa","modified":1553497456135},{"_id":"themes/polarbear/.git/config","hash":"497c37732e950146f4540cf1e5d70e1d203bb69b","modified":1553493950928},{"_id":"themes/polarbear/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1553493926417},{"_id":"themes/polarbear/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1553493950926},{"_id":"themes/polarbear/.git/index","hash":"b7853a1a13da142bca6329d204eb6373e5dcca8e","modified":1553493950954},{"_id":"themes/polarbear/.git/packed-refs","hash":"8c89be73077e047618c270087179cfb2697e2243","modified":1553493950924},{"_id":"themes/polarbear/layout/_layout.swig","hash":"60ad6ead7c72b9d94a4adf073884edc23f0751ea","modified":1553493950934},{"_id":"themes/polarbear/layout/archive.swig","hash":"600c71de731ac0ac8c281c3c9df1d7e9b62d2a9d","modified":1553493950939},{"_id":"themes/polarbear/layout/categories.swig","hash":"21987803e162bd9383502d9de07d5d531b78cb53","modified":1553493950940},{"_id":"themes/polarbear/layout/page.swig","hash":"a168c6e1dcf21af6408a713f8512b77de0dc60f3","modified":1553493950940},{"_id":"themes/polarbear/layout/index.swig","hash":"5c1dce2ea06d8de6f05f92f95cb1449cefc846bc","modified":1553493950940},{"_id":"themes/polarbear/layout/post.swig","hash":"f7a8b96953374694c50d131b1b760fd84b2d2d51","modified":1553493950940},{"_id":"themes/polarbear/languages/default.yml","hash":"5687525dd72a436ce0970f0b844dc7251069400a","modified":1553493950934},{"_id":"themes/polarbear/languages/en.yml","hash":"5687525dd72a436ce0970f0b844dc7251069400a","modified":1553493950934},{"_id":"themes/polarbear/languages/zh-cn.yml","hash":"be347d8f215c1d36a7a906143b1411e5aaf5d500","modified":1553493950934},{"_id":"themes/polarbear/source/favicon.ico","hash":"7d7c441f635c35b73f060f698773b14b7f306f4c","modified":1553493950947},{"_id":"themes/polarbear/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1553493926419},{"_id":"themes/polarbear/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1553493926418},{"_id":"themes/polarbear/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1553493926419},{"_id":"themes/polarbear/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1553493926421},{"_id":"themes/polarbear/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1553493926420},{"_id":"themes/polarbear/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1553493926418},{"_id":"themes/polarbear/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1553493926421},{"_id":"themes/polarbear/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1553493926420},{"_id":"themes/polarbear/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1553493926422},{"_id":"themes/polarbear/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1553493926420},{"_id":"themes/polarbear/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1553493926417},{"_id":"themes/polarbear/.git/logs/HEAD","hash":"2234d76c44edad42979bd2d2fd2434c0d359efe6","modified":1553493950927},{"_id":"themes/polarbear/layout/_partial/footer.swig","hash":"7a561a4a3954a9d32596ea61183da6b8fb2ebac0","modified":1553763060284},{"_id":"themes/polarbear/layout/_partial/comments.swig","hash":"9ba815734a4d807859f0aeafd5536b2d35d26074","modified":1553493950936},{"_id":"themes/polarbear/layout/_partial/pagination.swig","hash":"3843e523b9a7a1c5973d0c2de05cc88467733e09","modified":1553493950936},{"_id":"themes/polarbear/layout/_partial/head.swig","hash":"44c45d90d9a3db3401f6aa219cd26f38cdd0960b","modified":1553493950936},{"_id":"themes/polarbear/layout/_partial/header.swig","hash":"2e7d1faf49dadbf87b5925ff8da643cb470d6199","modified":1553493950936},{"_id":"themes/polarbear/layout/_partial/widget.swig","hash":"d8181794388ef3baa26c2d5cf8d71ae05472b32e","modified":1553493950936},{"_id":"themes/polarbear/layout/_macro/archive.swig","hash":"0f298085c0a1c556b41a5785e9fb3f2cacf01e34","modified":1553493950934},{"_id":"themes/polarbear/layout/_macro/post.swig","hash":"649d15fe32fa975a8444de66d3651e03b55e3cce","modified":1553493950935},{"_id":"themes/polarbear/layout/_script/analytics.swig","hash":"24ba4a8adcaf09c9ede76405ee732385595d8e39","modified":1553493950938},{"_id":"themes/polarbear/layout/_script/config.swig","hash":"4532063827e51b5c0dc3f58ca8c37896959887ac","modified":1553493950938},{"_id":"themes/polarbear/layout/_script/comments.swig","hash":"256713e117d67e2caad21db52bc0d51460e4ff7e","modified":1553493950938},{"_id":"themes/polarbear/layout/_script/theme.swig","hash":"44582de16d91f5cde5fa28a21db408385a46ff8e","modified":1553493950938},{"_id":"themes/polarbear/layout/_script/libs.swig","hash":"615f82ddd2f89e87a604b51773fd719c78f90580","modified":1553493950938},{"_id":"themes/polarbear/source/css/_base.scss","hash":"27c36dfe4b2d159c64e666bfe8561fbdc591e6a5","modified":1553493950941},{"_id":"themes/polarbear/source/css/_layout.scss","hash":"adfe6b08a183326e2115974860d1862288d4789c","modified":1553493950942},{"_id":"themes/polarbear/source/css/_variables.scss","hash":"d3f72d21bdd3cae17118323ae7f20f04d484a0f5","modified":1553493950946},{"_id":"themes/polarbear/source/css/style.scss","hash":"2f1d29a63c3c8f8c615049b0233db528b6ab3230","modified":1553493950946},{"_id":"themes/polarbear/.git/objects/pack/pack-1991ab3e9b312ce23b9bb23c3a0b8cfff719f650.idx","hash":"6224131b97f489729a8c19c2d673930f2c10702f","modified":1553493950914},{"_id":"themes/polarbear/.git/refs/heads/master","hash":"fec0245bc6a1d11c80d2f5fff6ff6bc56b53756b","modified":1553493950927},{"_id":"themes/polarbear/layout/_partial/_widget/categories.swig","hash":"8bb8094fd3d96c0dd7e58fd658384a5df3a7e2ec","modified":1553493950935},{"_id":"themes/polarbear/layout/_partial/_widget/custom.swig","hash":"3fd8e37b94982927fdd0eaa1f658ada660f23b9c","modified":1553493950935},{"_id":"themes/polarbear/layout/_partial/_widget/tags.swig","hash":"a14e2bda31b15cac11c29d0abb623543a6c87edc","modified":1553493950935},{"_id":"themes/polarbear/layout/_partial/_head/meta.swig","hash":"5eef6defbaf10f3f6d3b341d2d1af2e4d7aeb5a9","modified":1553493950935},{"_id":"themes/polarbear/layout/_script/_analytics/baidu-analytics.swig","hash":"5d62309b16071f1b6952891ec8e1f1d42e38a088","modified":1553493950937},{"_id":"themes/polarbear/layout/_script/_analytics/google-analytics.swig","hash":"f44684799386fbd4af6e5994b0c14c85eeff060c","modified":1553493950937},{"_id":"themes/polarbear/layout/_script/_comments/disqus.swig","hash":"f0e8b2ff1556622c0dee10a82e77646695b0f8dd","modified":1553493950937},{"_id":"themes/polarbear/layout/_script/_comments/duoshou.swig","hash":"582cf94bc12b56c6a16b5f3aa0067b51f74b0d40","modified":1553493950937},{"_id":"themes/polarbear/source/css/_common/_animation.scss","hash":"725af3ea621de186d6d61749836d5b491a96c1e4","modified":1553493950941},{"_id":"themes/polarbear/source/css/_common/_utils.scss","hash":"7719505ff3185a9f8fad05fe092fa91dd63d900c","modified":1553493950941},{"_id":"themes/polarbear/source/css/_common/_normalize.scss","hash":"259a1a0584f43efa6de2573a45fedfd59d4f39c0","modified":1553493950941},{"_id":"themes/polarbear/source/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1553493950948},{"_id":"themes/polarbear/source/css/_custom/_custom.scss","hash":"d0873cd8554d515282a6792fcc3f5bd4a256b7a6","modified":1553493950942},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1553493950949},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1553493950950},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1553493950949},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1553493950950},{"_id":"themes/polarbear/source/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1553493950949},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.css","hash":"79df8b1839cbcb82a0fd9738289eb43c1bc77026","modified":1553493950952},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.js","hash":"39357ff994e53ea15c582b6106094396835a8be0","modified":1553493950952},{"_id":"themes/polarbear/source/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1553493950953},{"_id":"themes/polarbear/source/css/_partial/_categories.scss","hash":"eb9fa27704fa280c6e8cc7b7f44b283cd2fe4ad3","modified":1553493950943},{"_id":"themes/polarbear/source/css/_partial/_header.scss","hash":"b4e97e6704ab530ec3b789866d689b736e36de9e","modified":1553493950943},{"_id":"themes/polarbear/source/css/_partial/_archive.scss","hash":"d4fa3756a4cab145f76fccc3c69d81b3412cec36","modified":1553493950942},{"_id":"themes/polarbear/source/css/_partial/_back-to-top.scss","hash":"c6f586ac04a9a0f3633dadf5c66be9e0c4027f1d","modified":1553493950943},{"_id":"themes/polarbear/source/css/_partial/_footer.scss","hash":"5d708caa8a96f84642404fe8a0d7a755092710db","modified":1553493950943},{"_id":"themes/polarbear/source/css/_partial/_iconfont.scss","hash":"ae9d1019bdbe6de4fe97aabbd42f489039e978a0","modified":1553493950943},{"_id":"themes/polarbear/source/css/_partial/_pagination.scss","hash":"7362208b41453429adae449acc916f8633077248","modified":1553493950944},{"_id":"themes/polarbear/source/css/_partial/_tags.scss","hash":"1928c8483f51035edccd6899d7f4ee06673f2804","modified":1553493950945},{"_id":"themes/polarbear/source/css/_partial/_widget.scss","hash":"2fcea4e8e43b79c73bf4bd6dbf0c1a2368d4c6ef","modified":1553493950946},{"_id":"themes/polarbear/source/css/_partial/_post.scss","hash":"71bfa582c26c491c8791dadbc3cb135284a123a2","modified":1553493950944},{"_id":"themes/polarbear/source/js/src/bootstrap.js","hash":"edb8690492039f4a4c9b83a3b9abda6d8a214984","modified":1553493950947},{"_id":"themes/polarbear/source/js/src/theme.js","hash":"6b76d3006694d56c843b8f968f224985a3fcce4e","modified":1553493950948},{"_id":"themes/polarbear/.git/objects/pack/pack-1991ab3e9b312ce23b9bb23c3a0b8cfff719f650.pack","hash":"521c4df230c80e8001a0b517524707df2293a26a","modified":1553493950914},{"_id":"themes/polarbear/.git/logs/refs/heads/master","hash":"2234d76c44edad42979bd2d2fd2434c0d359efe6","modified":1553493950927},{"_id":"themes/polarbear/source/lib/jquery/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1553493950954},{"_id":"themes/polarbear/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1553493950926},{"_id":"themes/polarbear/source/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1553493950950},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1553493950951},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1553493950950},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1553493950951},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1553493950951},{"_id":"themes/polarbear/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1553493950952},{"_id":"themes/polarbear/source/css/_partial/_post/_code.scss","hash":"446dbbc70ba45e41079e2954549c248f5affc7c0","modified":1553493950944},{"_id":"themes/polarbear/source/css/_partial/_post/_content.scss","hash":"899c7c25bfa4fe00d85734af0d71bc4caf2a7337","modified":1553493950945},{"_id":"themes/polarbear/source/css/_partial/_post/_footer.scss","hash":"d4c0fc62e69412304691d58984fec0aa963e1117","modified":1553493950945},{"_id":"themes/polarbear/source/css/_partial/_post/_header.scss","hash":"ceca6f4b00154542c57bc6fe451e01892a9338d2","modified":1553493950945},{"_id":"themes/polarbear/.git/logs/refs/remotes/origin/HEAD","hash":"2234d76c44edad42979bd2d2fd2434c0d359efe6","modified":1553493950926},{"_id":"public/categories/index.html","hash":"667b376fa20cf8827636a1290892294340486d41","modified":1553763072733},{"_id":"public/tags/index.html","hash":"ed8f458fe0eacccb23f950cadc9f493e4928bf5e","modified":1553763072733},{"_id":"public/about/index.html","hash":"9ff5d6601b557d0c65812f9b9af735265cd28d84","modified":1553763072733},{"_id":"public/2017/05/24/数据科学/index.html","hash":"14bbf307e1ee8bda0d627f057a6a997298a38e08","modified":1553763072733},{"_id":"public/2017/05/11/项目组目前的GIT管理方式/index.html","hash":"43b4bf0a54111a4f10f28efb4416d05e2926dff0","modified":1553763072733},{"_id":"public/2017/01/04/2017/index.html","hash":"162db47463d3359ba8d8eb9b1127d9e4d2de3499","modified":1553763072733},{"_id":"public/2016/11/06/浅读《乌合之众》-《厚黑学》/index.html","hash":"d1fcefba5dd661f929a6d547755681566c857948","modified":1553763072733},{"_id":"public/2016/08/16/偷影子的人/index.html","hash":"3a9562087dc114e8df012c303816a9938d0a3669","modified":1553763072733},{"_id":"public/2016/07/01/我们仨/index.html","hash":"67fe69fafab9bc9ca5df7c86df4e0d323ff06796","modified":1553763072734},{"_id":"public/categories/日常/index.html","hash":"800b589738f09bd9c16996c31b11ec950ecc1855","modified":1553763072734},{"_id":"public/categories/读后感/index.html","hash":"40f3f2177e1f6e99747c0b2660bd6ee7b4d4a620","modified":1553763072734},{"_id":"public/categories/elasticsearch/index.html","hash":"86eb1de09855891be3be358fde18e4645e7460c7","modified":1553763072734},{"_id":"public/2018/04/28/springboot-swagger/index.html","hash":"4dc63e4f810f7083109037bf02419950df3b3495","modified":1553763072734},{"_id":"public/categories/机器学习/index.html","hash":"09e5d1ecc755533f9c068c4d6d476534035ac42a","modified":1553763072734},{"_id":"public/categories/日常小结/index.html","hash":"f2533ed7b766c3823ec10581f1619810ce3bd8cc","modified":1553763072734},{"_id":"public/2017/11/09/程序员当产品经理是一种什么样的体验/index.html","hash":"7b3cabdf53f13e3ae25e64cd98eb4e6255c0e3ab","modified":1553763072734},{"_id":"public/categories/springboot/index.html","hash":"e43d8785749352c79949f535da3fb66bc4e75345","modified":1553763072734},{"_id":"public/archives/index.html","hash":"1a30e7f71a2d40139690f6fbc482812491a4c30e","modified":1553763072734},{"_id":"public/archives/2016/index.html","hash":"c0cc22f0c8cc7d92ca22f30a06167ed92702d8ee","modified":1553763072734},{"_id":"public/archives/2016/07/index.html","hash":"3d5febfdba2c02b051ebf6f5c11878afff8748e6","modified":1553763072734},{"_id":"public/archives/2016/08/index.html","hash":"a698b19638eb5fa4af08549da6ed3388102be1ec","modified":1553763072734},{"_id":"public/archives/2016/11/index.html","hash":"9383624c421d6b7a333aa8671a9497d573339720","modified":1553763072734},{"_id":"public/archives/2017/index.html","hash":"990757ea2663086738e431d292caf32277180fd0","modified":1553763072734},{"_id":"public/archives/2017/01/index.html","hash":"2b8f9e125ec89887adb14dafa606316188c1986c","modified":1553763072735},{"_id":"public/archives/2017/05/index.html","hash":"1549882b389a0da6cc2aa087c4c45b280818d531","modified":1553763072735},{"_id":"public/archives/2017/08/index.html","hash":"5c42f761ff17bfd7d7cc0e9c2dfead4a555a1130","modified":1553763072735},{"_id":"public/categories/技术分享/index.html","hash":"56e702f025d2cb124b14a8fbb978eaa9fcc89b33","modified":1553763072735},{"_id":"public/archives/2018/index.html","hash":"c0efcaeb0e0ca7cb355b76ae8e160fceb232f040","modified":1553763072735},{"_id":"public/categories/前端观察/index.html","hash":"d5d7d2dcc73dadec67f2e98ba354ec4481b5f577","modified":1553763072735},{"_id":"public/tags/计划/index.html","hash":"0e04c8ab3059213ed4d9d334c70d93aa8342d955","modified":1553763072735},{"_id":"public/tags/马克李维/index.html","hash":"3cd4ed0d697f1b81588abfc5bf21cdd181360cb3","modified":1553763072735},{"_id":"public/tags/国外著作/index.html","hash":"d233f4e5154964e6ab94168a5b59e2b711aca136","modified":1553763072735},{"_id":"public/tags/elasticsearch/index.html","hash":"08a721fe0e75e4744a91563068dc5f373ee034e3","modified":1553763072735},{"_id":"public/tags/api/index.html","hash":"7c64f446dc4548f9647ba47e4199cc4141569b81","modified":1553763072736},{"_id":"public/archives/2018/04/index.html","hash":"08689086788da44861dec2bbdbb61d8a87502757","modified":1553763072736},{"_id":"public/tags/springboot/index.html","hash":"2625e323ec947c860d2ec2c1235dfcd87daa4504","modified":1553763072736},{"_id":"public/tags/杨绛/index.html","hash":"379cbf12b2c6f804d8bcb7d9dbde067bd30db5e5","modified":1553763072736},{"_id":"public/tags/亲情/index.html","hash":"8423206225d910f54441c07f11c6ca38763ba7b0","modified":1553763072736},{"_id":"public/tags/swagger/index.html","hash":"e96146600dd869b6a97142d774bc5ee4ece7ebf6","modified":1553763072736},{"_id":"public/tags/心理学/index.html","hash":"534eb3bf75faeb2f873cde2936e7a894f1f932c1","modified":1553763072736},{"_id":"public/tags/厚黑/index.html","hash":"e51fa1eb4cc3697cd79763f8d86b0d9d3f133cec","modified":1553763072736},{"_id":"public/tags/机器学习/index.html","hash":"2a2a5b7820d2ea5ca295185a9ff0429dc99e0984","modified":1553763072736},{"_id":"public/tags/总结/index.html","hash":"49cc503d45419169e5fa5890b95120bbfb6cba61","modified":1553763072736},{"_id":"public/tags/大数据/index.html","hash":"0920a5729ed30f4c98f0b701bf6d5669b2e12d7e","modified":1553763072736},{"_id":"public/2017/11/13/icon-font/index.html","hash":"f9303575ae10f949d6fa99f510926759aa0c8f15","modified":1553763072736},{"_id":"public/tags/产品设计/index.html","hash":"9dd56eaa2869f32b03591d5ed73aa66339b5d31f","modified":1553763072736},{"_id":"public/tags/前端/index.html","hash":"0ab6b458b6367dd22484de3fda3e47fed9dd1b57","modified":1553763072736},{"_id":"public/index.html","hash":"e1eaa5b4f825b827c0781034dc699874f4a413d5","modified":1553763072737},{"_id":"public/tags/随笔/index.html","hash":"65a74d6218139620238a0624ac23d655c18114d0","modified":1553763072737},{"_id":"public/page/2/index.html","hash":"5312f908b5db43759a3673bf751f6f108bf05b0d","modified":1553763072737},{"_id":"public/2017/08/25/API/index.html","hash":"71601400076e85ac6b362cf31b2ea60b6228c02b","modified":1553763072737},{"_id":"public/archives/2017/11/index.html","hash":"ed2bbc1b067dec245c53a3d605c195e40af774de","modified":1553763072739},{"_id":"public/favicon.ico","hash":"7d7c441f635c35b73f060f698773b14b7f306f4c","modified":1553763072742},{"_id":"public/CNAME","hash":"01b357ba623baeec46522fee85f17482cd0606a6","modified":1553763072742},{"_id":"public/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1553763072742},{"_id":"public/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1553763072742},{"_id":"public/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1553763072742},{"_id":"public/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1553763072742},{"_id":"public/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1553763072742},{"_id":"public/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1553763072743},{"_id":"public/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1553763072743},{"_id":"public/js/src/bootstrap.js","hash":"edb8690492039f4a4c9b83a3b9abda6d8a214984","modified":1553763072761},{"_id":"public/lib/fancybox/jquery.fancybox.css","hash":"79df8b1839cbcb82a0fd9738289eb43c1bc77026","modified":1553763072761},{"_id":"public/js/src/theme.js","hash":"6b76d3006694d56c843b8f968f224985a3fcce4e","modified":1553763072761},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1553763072761},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1553763072761},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1553763072761},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1553763072761},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1553763072761},{"_id":"public/lib/fancybox/jquery.fancybox.js","hash":"39357ff994e53ea15c582b6106094396835a8be0","modified":1553763072762},{"_id":"public/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1553763072762},{"_id":"public/lib/jquery/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1553763072762},{"_id":"public/css/style.css","hash":"baa4d132879ef3c7a9aa2d939ceb6912ff0e026b","modified":1553763072826}],"Category":[{"name":"日常","_id":"cjtseez4h0002muhwkrb4obbr"},{"name":"读后感","_id":"cjtseez4m0007muhwhga1658n"},{"name":"elasticsearch","_id":"cjtseez4o000bmuhwn3z8algz"},{"name":"springboot","_id":"cjtseez4p000emuhw2yol44kn"},{"name":"机器学习","_id":"cjtseez5u0014muhw4d81texx"},{"name":"日常小结","_id":"cjtseez5y0019muhw94q56h3j"},{"name":"技术分享","_id":"cjtseez5z001dmuhwphleeft9"},{"name":"前端观察","_id":"cjtseez61001hmuhwsfdy97d9"}],"Data":[],"Page":[{"title":"categories","date":"2017-11-02T08:11:15.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-02 16:11:15\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-11-02T08:11:24.000Z","path":"categories/index.html","layout":"page","_id":"cjtseez5p000ymuhw3j0xo82f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"关于我","date":"2019-03-25T07:08:41.000Z","_content":"\n![数据科学带给了我们什么](http://po1b3hiii.bkt.clouddn.com/bd297795ly1fnu2tbouqjj20c808qdfw.jpg)\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-03-25 15:08:41\n---\n\n![数据科学带给了我们什么](http://po1b3hiii.bkt.clouddn.com/bd297795ly1fnu2tbouqjj20c808qdfw.jpg)\n\n","updated":"2019-03-25T07:12:12.291Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjtseez5r0010muhwajwvwgf6","content":"<p><img src=\"http://po1b3hiii.bkt.clouddn.com/bd297795ly1fnu2tbouqjj20c808qdfw.jpg\" alt=\"数据科学带给了我们什么\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"http://po1b3hiii.bkt.clouddn.com/bd297795ly1fnu2tbouqjj20c808qdfw.jpg\" alt=\"数据科学带给了我们什么\"></p>\n"},{"title":"tags","date":"2017-11-02T08:10:38.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-02 16:10:38\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-11-02T08:11:04.000Z","path":"tags/index.html","layout":"page","_id":"cjtseez5t0013muhw888siezo","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2017","date":"2017-01-04T07:53:01.000Z","_content":"\n妈妈说：目标呢，一定要简单粗暴。\n\n<!--more-->\n\n- 学一门乐器\n\n- 读一百本书\n\n- 去三个陌生的城市\n\n- 买一辆车\n\n- 每周至少做一份美食\n\n- 每周至少练五篇字帖\n\n- 每月至少写一篇博客","source":"_posts/2017.md","raw":"---\ntitle: 2017\ndate: 2017-01-04 15:53:01\ntags:\n  - 计划\ncategories: 日常\n---\n\n妈妈说：目标呢，一定要简单粗暴。\n\n<!--more-->\n\n- 学一门乐器\n\n- 读一百本书\n\n- 去三个陌生的城市\n\n- 买一辆车\n\n- 每周至少做一份美食\n\n- 每周至少练五篇字帖\n\n- 每月至少写一篇博客","slug":"2017","published":1,"updated":"2019-03-25T07:06:03.884Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez4b0000muhw7x2plooj","content":"<p>妈妈说：目标呢，一定要简单粗暴。</p>\n<a id=\"more\"></a>\n<ul>\n<li><p>学一门乐器</p>\n</li>\n<li><p>读一百本书</p>\n</li>\n<li><p>去三个陌生的城市</p>\n</li>\n<li><p>买一辆车</p>\n</li>\n<li><p>每周至少做一份美食</p>\n</li>\n<li><p>每周至少练五篇字帖</p>\n</li>\n<li><p>每月至少写一篇博客</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>妈妈说：目标呢，一定要简单粗暴。</p>","more":"<ul>\n<li><p>学一门乐器</p>\n</li>\n<li><p>读一百本书</p>\n</li>\n<li><p>去三个陌生的城市</p>\n</li>\n<li><p>买一辆车</p>\n</li>\n<li><p>每周至少做一份美食</p>\n</li>\n<li><p>每周至少练五篇字帖</p>\n</li>\n<li><p>每月至少写一篇博客</p>\n</li>\n</ul>"},{"title":"偷影子的人","date":"2016-08-16T07:50:59.000Z","_content":"\n马克李维是一个法国作家，很出名的那种。可是我却从未拜读过他的书。《偷影子的人》是他的第10部作品。能读到这本书，也是在机缘巧合之下的。本来我准备读的有两本书，另一本是林语堂的《生活的艺术》。\n\n<!--more-->\n\n![偷影子的人](http://upload-images.jianshu.io/upload_images/1089029-c91520167b9c41a0.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n          这里两本书都讲述的生活，粗略翻了几页《生活的艺术》，略微有些艰涩难懂，而《偷影子的人》这本书讲述了一个很平淡，不完整的故事。也许是最近生活有些变化，想简单一些，所以先读了这本书。\n           这原本是一个平平淡淡的故事。一个弱小的男生，处在一个离异的家庭，班级里有一个又高又壮，经常欺负他的男孩，有一个至交好友，还自述了一段懵懂的爱情。平淡的题材如一颗平凡的石头，却被马克李维雕琢成了无价之宝，不愧为神级作家。\n 作者为男主赋予了一种能力，可以偷到别人的影子。与其说是影子，不如说是内心世界，可以窥探别人的隐私。其实每个人都有自己的另一面，强大的人有软弱的地方，弱小的人也有很高的理想。当我们站在对方的角度的时候，就会变得坦然，更能让自己去理解对方。当男孩变大的时候，这种能力貌似就消失了。还是说只有当我们有一个纯洁如小孩般的心才能拥有这种能力呢。\n          这本书的章节描述了影子的秘密，海上的克蕾尔，好朋友吕克的梦想，还有自己的完美女友苏菲，到最后唤回对初恋的回忆。却唯独没有单独描写深爱自己的母亲。虽然没有列出来，但是母亲的爱却贯穿了文章的全部。母亲对男孩倾注了所有了爱，而男孩也同样深爱着自己的母亲，却没有表达出来。他知道了很多人的秘密，却唯独没有了解过自己母亲的秘密。看到这里，我是不是应该给我们的妈妈打个电话，说一声我爱你呢。\n           我们在书中总能找到自己的影子。一个难忘的女孩，可能那个女孩没有用风筝写我想你。一个最要好的朋友，你可以为了他付出自己所有的真心，不求回报。你同样也可能谈过一个女朋友，她很理解你，懂你，也同样知道你不喜欢她，却愿意为你付出所有。\n           追求该追求的，努力该努力的，奋斗该奋斗的，享受该享受的，不要太多抱怨，不要太多期待。拥抱生活，活在当下吧。\n![一个人也要好好吃早餐](http://upload-images.jianshu.io/upload_images/1089029-1b4e51795d1035f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n           我的选择是对的，读这本书，描述生活的书，本来就应该简单，有趣，温馨，感动。当最后男孩的影子亲吻了克蕾尔影子的时候，我合上了这本书。这时候已经深夜11点，我却无法掩盖自己心中的那份小小的幸福。它让我回到了自己纯真无邪的年纪，就这么决定了，就明天，我也要去偷一下别人的影子。","source":"_posts/偷影子的人.md","raw":"---\ntitle: 偷影子的人\ndate: 2016-08-16 15:50:59\ntags:\n  - 马克李维\n  - 国外著作\ncategories: 读后感\n---\n\n马克李维是一个法国作家，很出名的那种。可是我却从未拜读过他的书。《偷影子的人》是他的第10部作品。能读到这本书，也是在机缘巧合之下的。本来我准备读的有两本书，另一本是林语堂的《生活的艺术》。\n\n<!--more-->\n\n![偷影子的人](http://upload-images.jianshu.io/upload_images/1089029-c91520167b9c41a0.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n          这里两本书都讲述的生活，粗略翻了几页《生活的艺术》，略微有些艰涩难懂，而《偷影子的人》这本书讲述了一个很平淡，不完整的故事。也许是最近生活有些变化，想简单一些，所以先读了这本书。\n           这原本是一个平平淡淡的故事。一个弱小的男生，处在一个离异的家庭，班级里有一个又高又壮，经常欺负他的男孩，有一个至交好友，还自述了一段懵懂的爱情。平淡的题材如一颗平凡的石头，却被马克李维雕琢成了无价之宝，不愧为神级作家。\n 作者为男主赋予了一种能力，可以偷到别人的影子。与其说是影子，不如说是内心世界，可以窥探别人的隐私。其实每个人都有自己的另一面，强大的人有软弱的地方，弱小的人也有很高的理想。当我们站在对方的角度的时候，就会变得坦然，更能让自己去理解对方。当男孩变大的时候，这种能力貌似就消失了。还是说只有当我们有一个纯洁如小孩般的心才能拥有这种能力呢。\n          这本书的章节描述了影子的秘密，海上的克蕾尔，好朋友吕克的梦想，还有自己的完美女友苏菲，到最后唤回对初恋的回忆。却唯独没有单独描写深爱自己的母亲。虽然没有列出来，但是母亲的爱却贯穿了文章的全部。母亲对男孩倾注了所有了爱，而男孩也同样深爱着自己的母亲，却没有表达出来。他知道了很多人的秘密，却唯独没有了解过自己母亲的秘密。看到这里，我是不是应该给我们的妈妈打个电话，说一声我爱你呢。\n           我们在书中总能找到自己的影子。一个难忘的女孩，可能那个女孩没有用风筝写我想你。一个最要好的朋友，你可以为了他付出自己所有的真心，不求回报。你同样也可能谈过一个女朋友，她很理解你，懂你，也同样知道你不喜欢她，却愿意为你付出所有。\n           追求该追求的，努力该努力的，奋斗该奋斗的，享受该享受的，不要太多抱怨，不要太多期待。拥抱生活，活在当下吧。\n![一个人也要好好吃早餐](http://upload-images.jianshu.io/upload_images/1089029-1b4e51795d1035f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n           我的选择是对的，读这本书，描述生活的书，本来就应该简单，有趣，温馨，感动。当最后男孩的影子亲吻了克蕾尔影子的时候，我合上了这本书。这时候已经深夜11点，我却无法掩盖自己心中的那份小小的幸福。它让我回到了自己纯真无邪的年纪，就这么决定了，就明天，我也要去偷一下别人的影子。","slug":"偷影子的人","published":1,"updated":"2019-03-25T07:01:24.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez4f0001muhwj53ij3ec","content":"<p>马克李维是一个法国作家，很出名的那种。可是我却从未拜读过他的书。《偷影子的人》是他的第10部作品。能读到这本书，也是在机缘巧合之下的。本来我准备读的有两本书，另一本是林语堂的《生活的艺术》。</p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-c91520167b9c41a0.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"偷影子的人\"><br>          这里两本书都讲述的生活，粗略翻了几页《生活的艺术》，略微有些艰涩难懂，而《偷影子的人》这本书讲述了一个很平淡，不完整的故事。也许是最近生活有些变化，想简单一些，所以先读了这本书。<br>           这原本是一个平平淡淡的故事。一个弱小的男生，处在一个离异的家庭，班级里有一个又高又壮，经常欺负他的男孩，有一个至交好友，还自述了一段懵懂的爱情。平淡的题材如一颗平凡的石头，却被马克李维雕琢成了无价之宝，不愧为神级作家。<br> 作者为男主赋予了一种能力，可以偷到别人的影子。与其说是影子，不如说是内心世界，可以窥探别人的隐私。其实每个人都有自己的另一面，强大的人有软弱的地方，弱小的人也有很高的理想。当我们站在对方的角度的时候，就会变得坦然，更能让自己去理解对方。当男孩变大的时候，这种能力貌似就消失了。还是说只有当我们有一个纯洁如小孩般的心才能拥有这种能力呢。<br>          这本书的章节描述了影子的秘密，海上的克蕾尔，好朋友吕克的梦想，还有自己的完美女友苏菲，到最后唤回对初恋的回忆。却唯独没有单独描写深爱自己的母亲。虽然没有列出来，但是母亲的爱却贯穿了文章的全部。母亲对男孩倾注了所有了爱，而男孩也同样深爱着自己的母亲，却没有表达出来。他知道了很多人的秘密，却唯独没有了解过自己母亲的秘密。看到这里，我是不是应该给我们的妈妈打个电话，说一声我爱你呢。<br>           我们在书中总能找到自己的影子。一个难忘的女孩，可能那个女孩没有用风筝写我想你。一个最要好的朋友，你可以为了他付出自己所有的真心，不求回报。你同样也可能谈过一个女朋友，她很理解你，懂你，也同样知道你不喜欢她，却愿意为你付出所有。<br>           追求该追求的，努力该努力的，奋斗该奋斗的，享受该享受的，不要太多抱怨，不要太多期待。拥抱生活，活在当下吧。<br><img src=\"http://upload-images.jianshu.io/upload_images/1089029-1b4e51795d1035f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"一个人也要好好吃早餐\"><br>           我的选择是对的，读这本书，描述生活的书，本来就应该简单，有趣，温馨，感动。当最后男孩的影子亲吻了克蕾尔影子的时候，我合上了这本书。这时候已经深夜11点，我却无法掩盖自己心中的那份小小的幸福。它让我回到了自己纯真无邪的年纪，就这么决定了，就明天，我也要去偷一下别人的影子。</p>\n","site":{"data":{}},"excerpt":"<p>马克李维是一个法国作家，很出名的那种。可是我却从未拜读过他的书。《偷影子的人》是他的第10部作品。能读到这本书，也是在机缘巧合之下的。本来我准备读的有两本书，另一本是林语堂的《生活的艺术》。</p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-c91520167b9c41a0.JPG?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"偷影子的人\"><br>          这里两本书都讲述的生活，粗略翻了几页《生活的艺术》，略微有些艰涩难懂，而《偷影子的人》这本书讲述了一个很平淡，不完整的故事。也许是最近生活有些变化，想简单一些，所以先读了这本书。<br>           这原本是一个平平淡淡的故事。一个弱小的男生，处在一个离异的家庭，班级里有一个又高又壮，经常欺负他的男孩，有一个至交好友，还自述了一段懵懂的爱情。平淡的题材如一颗平凡的石头，却被马克李维雕琢成了无价之宝，不愧为神级作家。<br> 作者为男主赋予了一种能力，可以偷到别人的影子。与其说是影子，不如说是内心世界，可以窥探别人的隐私。其实每个人都有自己的另一面，强大的人有软弱的地方，弱小的人也有很高的理想。当我们站在对方的角度的时候，就会变得坦然，更能让自己去理解对方。当男孩变大的时候，这种能力貌似就消失了。还是说只有当我们有一个纯洁如小孩般的心才能拥有这种能力呢。<br>          这本书的章节描述了影子的秘密，海上的克蕾尔，好朋友吕克的梦想，还有自己的完美女友苏菲，到最后唤回对初恋的回忆。却唯独没有单独描写深爱自己的母亲。虽然没有列出来，但是母亲的爱却贯穿了文章的全部。母亲对男孩倾注了所有了爱，而男孩也同样深爱着自己的母亲，却没有表达出来。他知道了很多人的秘密，却唯独没有了解过自己母亲的秘密。看到这里，我是不是应该给我们的妈妈打个电话，说一声我爱你呢。<br>           我们在书中总能找到自己的影子。一个难忘的女孩，可能那个女孩没有用风筝写我想你。一个最要好的朋友，你可以为了他付出自己所有的真心，不求回报。你同样也可能谈过一个女朋友，她很理解你，懂你，也同样知道你不喜欢她，却愿意为你付出所有。<br>           追求该追求的，努力该努力的，奋斗该奋斗的，享受该享受的，不要太多抱怨，不要太多期待。拥抱生活，活在当下吧。<br><img src=\"http://upload-images.jianshu.io/upload_images/1089029-1b4e51795d1035f3.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"一个人也要好好吃早餐\"><br>           我的选择是对的，读这本书，描述生活的书，本来就应该简单，有趣，温馨，感动。当最后男孩的影子亲吻了克蕾尔影子的时候，我合上了这本书。这时候已经深夜11点，我却无法掩盖自己心中的那份小小的幸福。它让我回到了自己纯真无邪的年纪，就这么决定了，就明天，我也要去偷一下别人的影子。</p>"},{"layout":"elasticsearch","title":"API","date":"2017-08-25T07:55:31.000Z","_content":"\n<!--more-->\n\n## springboot-elasticsearch\n> 基于springboot的web项目，通过elasticsearch提供的Java API 进行查询操作.\n\n#### 起因\n项目在一个查询要在亚秒级计算（分组、累加、平均）大量数据的结果。官方提供的API过于简单，自己在做项目中遇到了一些坑，并总结了一些API的使用，简单分享一下。\n\n\n#### 前置条件\n有一个elasticsearch服务\n\n#### 配置\n> demo是基于springboot快速构建了一个web应用。elasticsearch提供了一个客户端:`TransportClient`,首先我们来配置一下\n\n##### 如果在main方法里面执行可以直接创建一个客户端连接\n```\nTransportClient client = new PreBuiltTransportClient(Settings.EMPTY)\n                .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"172.16.3.121\"), 9300));\n```\n\n##### 如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\n\n```\n@Configuration\npublic class ElasticSearchConfig {\n\n    @Value(\"${spring.elasticsearch.host}\")\n    private String host;//elasticsearch的地址\n\n    @Value(\"${spring.elasticsearch.port}\")\n    private Integer port;//elasticsearch的端口\n\n    private static final Logger LOG = LogManager.getLogger(ElasticSearchConfig.class);\n\n    @Bean\n    public TransportClient client(){\n        TransportClient client = null;\n        try {\n\n            client = new PreBuiltTransportClient(Settings.EMPTY)\n                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(host), port));\n        } catch (UnknownHostException e) {\n            LOG.error(\"创建elasticsearch客户端失败\");\n            e.printStackTrace();\n        }\n        LOG.info(\"创建elasticsearch客户端成功\");\n        return client;\n    }\n\n}\n\n配置完毕之后，我们就可以使用了。这里写了一个简单的demo，汇总了常用的一些API使用。\n```\n\n#### 代码示例\n> 这个代码示例满足了查询所需，查询条件，分组计算，分组排序等\n\n```\n    Map<String,Object> map = Collections.emptyMap();\n\n        Script script = new Script(ScriptType.INLINE, \"painless\",\"params._value0 > 0\",map);  //提前定义好查询销量是否大于1000的脚本，类似SQL里面的having\n\n        long beginTime = System.currentTimeMillis();\n\n        SearchResponse sr = client.prepareSearch(\"adele\").setTypes(\"sale\")\n                .setQuery(QueryBuilders.boolQuery()\n                        .must(QueryBuilders.termQuery(\"store_name.keyword\", \"xxx旗舰店\"))  //挨个设置查询条件，没有就不加，如果是字符串类型的，要加keyword后缀\n                        .must(QueryBuilders.termQuery(\"department_name.keyword\", \"玎\"))\n                        .must(QueryBuilders.termQuery(\"category_name.keyword\", \"T恤\"))\n                        .must(QueryBuilders.rangeQuery(\"pay_date\").gt(\"2017-03-07\").lt(\"2017-07-09\"))\n                ).addAggregation(\n                        AggregationBuilders.terms(\"by_product_code\").field(\"product_code.keyword\").size(500) //按货号分组，最多查500个货号.SKU直接改字段名字就可以\n                                .subAggregation(AggregationBuilders.terms(\"by_store_name\").field(\"store_name.keyword\").size(50) //按店铺分组，不显示店铺可以过滤掉这一行，下边相应减少一个循环\n                                        .subAggregation(AggregationBuilders.sum(\"total_sales\").field(\"quantity\"))  //分组计算销量汇总\n                                        .subAggregation(AggregationBuilders.sum(\"total_sales_amount\").field(\"amount_actual\"))  //分组计算实付款汇总，需要加其他汇总的在这里依次加\n                                        .subAggregation(PipelineAggregatorBuilders.bucketSelector(\"sales_bucket_filter\",script,\"total_sales\")))//查询是否大于指定值\n                                .order(Terms.Order.compound(Terms.Order.aggregation(\"total_calculate_sale_amount\",false)))) //分组排序\n\n                .execute().actionGet();\n\n        Terms terms = sr.getAggregations().get(\"by_product_code\");   //查询遍历第一个根据货号分组的aggregation\n\n        System.out.println(terms.getBuckets().size());\n        for (Terms.Bucket entry : terms.getBuckets()) {\n            System.out.println(\"------------------\");\n            System.out.println(\"【 \" + entry.getKey() + \" 】订单数 : \" + entry.getDocCount() );\n\n            Terms subTerms = entry.getAggregations().get(\"by_store_name\");    //查询遍历第二个根据店铺分组的aggregation\n            for (Terms.Bucket subEntry : subTerms.getBuckets()) {\n                Sum sum1 = subEntry.getAggregations().get(\"total_sales\"); //取得销量的汇总\n                double total_sales = sum1.getValue();\n                System.out.println(subEntry.getKey() + \" 订单数:  \" + subEntry.getDocCount() + \"  销量: \" + total_sales); //店铺和订单数量和销量\n            }\n        }\n\n        long endTime = System.currentTimeMillis();\n        System.out.println(\"查询耗时\" + ( endTime - beginTime ) + \"毫秒\");\n\n```\n\n#### demo地址\n\n[springboot-elasticsearch](https://github.com/whiney/springboot-elasticsearch.git)\n\n1. 启动项目\n2. 访问http://localhost:9999/test\n3. 查看后端打印\n\n#### 参考链接\n[Search API](https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-search.html)\n\n有一些坑是我领导踩得，部分代码已得授权。","source":"_posts/API.md","raw":"---\nlayout: elasticsearch\ntitle: API\ndate: 2017-08-25 15:55:31\ntags:\n  - elasticsearch\n  - api\ncategories: elasticsearch\n---\n\n<!--more-->\n\n## springboot-elasticsearch\n> 基于springboot的web项目，通过elasticsearch提供的Java API 进行查询操作.\n\n#### 起因\n项目在一个查询要在亚秒级计算（分组、累加、平均）大量数据的结果。官方提供的API过于简单，自己在做项目中遇到了一些坑，并总结了一些API的使用，简单分享一下。\n\n\n#### 前置条件\n有一个elasticsearch服务\n\n#### 配置\n> demo是基于springboot快速构建了一个web应用。elasticsearch提供了一个客户端:`TransportClient`,首先我们来配置一下\n\n##### 如果在main方法里面执行可以直接创建一个客户端连接\n```\nTransportClient client = new PreBuiltTransportClient(Settings.EMPTY)\n                .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(\"172.16.3.121\"), 9300));\n```\n\n##### 如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\n\n```\n@Configuration\npublic class ElasticSearchConfig {\n\n    @Value(\"${spring.elasticsearch.host}\")\n    private String host;//elasticsearch的地址\n\n    @Value(\"${spring.elasticsearch.port}\")\n    private Integer port;//elasticsearch的端口\n\n    private static final Logger LOG = LogManager.getLogger(ElasticSearchConfig.class);\n\n    @Bean\n    public TransportClient client(){\n        TransportClient client = null;\n        try {\n\n            client = new PreBuiltTransportClient(Settings.EMPTY)\n                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(host), port));\n        } catch (UnknownHostException e) {\n            LOG.error(\"创建elasticsearch客户端失败\");\n            e.printStackTrace();\n        }\n        LOG.info(\"创建elasticsearch客户端成功\");\n        return client;\n    }\n\n}\n\n配置完毕之后，我们就可以使用了。这里写了一个简单的demo，汇总了常用的一些API使用。\n```\n\n#### 代码示例\n> 这个代码示例满足了查询所需，查询条件，分组计算，分组排序等\n\n```\n    Map<String,Object> map = Collections.emptyMap();\n\n        Script script = new Script(ScriptType.INLINE, \"painless\",\"params._value0 > 0\",map);  //提前定义好查询销量是否大于1000的脚本，类似SQL里面的having\n\n        long beginTime = System.currentTimeMillis();\n\n        SearchResponse sr = client.prepareSearch(\"adele\").setTypes(\"sale\")\n                .setQuery(QueryBuilders.boolQuery()\n                        .must(QueryBuilders.termQuery(\"store_name.keyword\", \"xxx旗舰店\"))  //挨个设置查询条件，没有就不加，如果是字符串类型的，要加keyword后缀\n                        .must(QueryBuilders.termQuery(\"department_name.keyword\", \"玎\"))\n                        .must(QueryBuilders.termQuery(\"category_name.keyword\", \"T恤\"))\n                        .must(QueryBuilders.rangeQuery(\"pay_date\").gt(\"2017-03-07\").lt(\"2017-07-09\"))\n                ).addAggregation(\n                        AggregationBuilders.terms(\"by_product_code\").field(\"product_code.keyword\").size(500) //按货号分组，最多查500个货号.SKU直接改字段名字就可以\n                                .subAggregation(AggregationBuilders.terms(\"by_store_name\").field(\"store_name.keyword\").size(50) //按店铺分组，不显示店铺可以过滤掉这一行，下边相应减少一个循环\n                                        .subAggregation(AggregationBuilders.sum(\"total_sales\").field(\"quantity\"))  //分组计算销量汇总\n                                        .subAggregation(AggregationBuilders.sum(\"total_sales_amount\").field(\"amount_actual\"))  //分组计算实付款汇总，需要加其他汇总的在这里依次加\n                                        .subAggregation(PipelineAggregatorBuilders.bucketSelector(\"sales_bucket_filter\",script,\"total_sales\")))//查询是否大于指定值\n                                .order(Terms.Order.compound(Terms.Order.aggregation(\"total_calculate_sale_amount\",false)))) //分组排序\n\n                .execute().actionGet();\n\n        Terms terms = sr.getAggregations().get(\"by_product_code\");   //查询遍历第一个根据货号分组的aggregation\n\n        System.out.println(terms.getBuckets().size());\n        for (Terms.Bucket entry : terms.getBuckets()) {\n            System.out.println(\"------------------\");\n            System.out.println(\"【 \" + entry.getKey() + \" 】订单数 : \" + entry.getDocCount() );\n\n            Terms subTerms = entry.getAggregations().get(\"by_store_name\");    //查询遍历第二个根据店铺分组的aggregation\n            for (Terms.Bucket subEntry : subTerms.getBuckets()) {\n                Sum sum1 = subEntry.getAggregations().get(\"total_sales\"); //取得销量的汇总\n                double total_sales = sum1.getValue();\n                System.out.println(subEntry.getKey() + \" 订单数:  \" + subEntry.getDocCount() + \"  销量: \" + total_sales); //店铺和订单数量和销量\n            }\n        }\n\n        long endTime = System.currentTimeMillis();\n        System.out.println(\"查询耗时\" + ( endTime - beginTime ) + \"毫秒\");\n\n```\n\n#### demo地址\n\n[springboot-elasticsearch](https://github.com/whiney/springboot-elasticsearch.git)\n\n1. 启动项目\n2. 访问http://localhost:9999/test\n3. 查看后端打印\n\n#### 参考链接\n[Search API](https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-search.html)\n\n有一些坑是我领导踩得，部分代码已得授权。","slug":"API","published":1,"updated":"2019-03-25T07:04:57.699Z","comments":1,"photos":[],"link":"","_id":"cjtseez4j0004muhwgfo240rq","content":"<a id=\"more\"></a>\n<h2 id=\"springboot-elasticsearch\"><a href=\"#springboot-elasticsearch\" class=\"headerlink\" title=\"springboot-elasticsearch\"></a>springboot-elasticsearch</h2><blockquote>\n<p>基于springboot的web项目，通过elasticsearch提供的Java API 进行查询操作.</p>\n</blockquote>\n<h4 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h4><p>项目在一个查询要在亚秒级计算（分组、累加、平均）大量数据的结果。官方提供的API过于简单，自己在做项目中遇到了一些坑，并总结了一些API的使用，简单分享一下。</p>\n<h4 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h4><p>有一个elasticsearch服务</p>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><blockquote>\n<p>demo是基于springboot快速构建了一个web应用。elasticsearch提供了一个客户端:<code>TransportClient</code>,首先我们来配置一下</p>\n</blockquote>\n<h5 id=\"如果在main方法里面执行可以直接创建一个客户端连接\"><a href=\"#如果在main方法里面执行可以直接创建一个客户端连接\" class=\"headerlink\" title=\"如果在main方法里面执行可以直接创建一个客户端连接\"></a>如果在main方法里面执行可以直接创建一个客户端连接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TransportClient client = new PreBuiltTransportClient(Settings.EMPTY)</div><div class=\"line\">                .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;172.16.3.121&quot;), 9300));</div></pre></td></tr></table></figure>\n<h5 id=\"如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\"><a href=\"#如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\" class=\"headerlink\" title=\"如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\"></a>如果在springboot项目中。配置一下，这样我们可以直接注入使用了。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">public class ElasticSearchConfig &#123;</div><div class=\"line\"></div><div class=\"line\">    @Value(&quot;$&#123;spring.elasticsearch.host&#125;&quot;)</div><div class=\"line\">    private String host;//elasticsearch的地址</div><div class=\"line\"></div><div class=\"line\">    @Value(&quot;$&#123;spring.elasticsearch.port&#125;&quot;)</div><div class=\"line\">    private Integer port;//elasticsearch的端口</div><div class=\"line\"></div><div class=\"line\">    private static final Logger LOG = LogManager.getLogger(ElasticSearchConfig.class);</div><div class=\"line\"></div><div class=\"line\">    @Bean</div><div class=\"line\">    public TransportClient client()&#123;</div><div class=\"line\">        TransportClient client = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\"></div><div class=\"line\">            client = new PreBuiltTransportClient(Settings.EMPTY)</div><div class=\"line\">                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(host), port));</div><div class=\"line\">        &#125; catch (UnknownHostException e) &#123;</div><div class=\"line\">            LOG.error(&quot;创建elasticsearch客户端失败&quot;);</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        LOG.info(&quot;创建elasticsearch客户端成功&quot;);</div><div class=\"line\">        return client;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">配置完毕之后，我们就可以使用了。这里写了一个简单的demo，汇总了常用的一些API使用。</div></pre></td></tr></table></figure>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><blockquote>\n<p>这个代码示例满足了查询所需，查询条件，分组计算，分组排序等</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">Map&lt;String,Object&gt; map = Collections.emptyMap();</div><div class=\"line\"></div><div class=\"line\">    Script script = new Script(ScriptType.INLINE, &quot;painless&quot;,&quot;params._value0 &gt; 0&quot;,map);  //提前定义好查询销量是否大于1000的脚本，类似SQL里面的having</div><div class=\"line\"></div><div class=\"line\">    long beginTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">    SearchResponse sr = client.prepareSearch(&quot;adele&quot;).setTypes(&quot;sale&quot;)</div><div class=\"line\">            .setQuery(QueryBuilders.boolQuery()</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;store_name.keyword&quot;, &quot;xxx旗舰店&quot;))  //挨个设置查询条件，没有就不加，如果是字符串类型的，要加keyword后缀</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;department_name.keyword&quot;, &quot;玎&quot;))</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;category_name.keyword&quot;, &quot;T恤&quot;))</div><div class=\"line\">                    .must(QueryBuilders.rangeQuery(&quot;pay_date&quot;).gt(&quot;2017-03-07&quot;).lt(&quot;2017-07-09&quot;))</div><div class=\"line\">            ).addAggregation(</div><div class=\"line\">                    AggregationBuilders.terms(&quot;by_product_code&quot;).field(&quot;product_code.keyword&quot;).size(500) //按货号分组，最多查500个货号.SKU直接改字段名字就可以</div><div class=\"line\">                            .subAggregation(AggregationBuilders.terms(&quot;by_store_name&quot;).field(&quot;store_name.keyword&quot;).size(50) //按店铺分组，不显示店铺可以过滤掉这一行，下边相应减少一个循环</div><div class=\"line\">                                    .subAggregation(AggregationBuilders.sum(&quot;total_sales&quot;).field(&quot;quantity&quot;))  //分组计算销量汇总</div><div class=\"line\">                                    .subAggregation(AggregationBuilders.sum(&quot;total_sales_amount&quot;).field(&quot;amount_actual&quot;))  //分组计算实付款汇总，需要加其他汇总的在这里依次加</div><div class=\"line\">                                    .subAggregation(PipelineAggregatorBuilders.bucketSelector(&quot;sales_bucket_filter&quot;,script,&quot;total_sales&quot;)))//查询是否大于指定值</div><div class=\"line\">                            .order(Terms.Order.compound(Terms.Order.aggregation(&quot;total_calculate_sale_amount&quot;,false)))) //分组排序</div><div class=\"line\"></div><div class=\"line\">            .execute().actionGet();</div><div class=\"line\"></div><div class=\"line\">    Terms terms = sr.getAggregations().get(&quot;by_product_code&quot;);   //查询遍历第一个根据货号分组的aggregation</div><div class=\"line\"></div><div class=\"line\">    System.out.println(terms.getBuckets().size());</div><div class=\"line\">    for (Terms.Bucket entry : terms.getBuckets()) &#123;</div><div class=\"line\">        System.out.println(&quot;------------------&quot;);</div><div class=\"line\">        System.out.println(&quot;【 &quot; + entry.getKey() + &quot; 】订单数 : &quot; + entry.getDocCount() );</div><div class=\"line\"></div><div class=\"line\">        Terms subTerms = entry.getAggregations().get(&quot;by_store_name&quot;);    //查询遍历第二个根据店铺分组的aggregation</div><div class=\"line\">        for (Terms.Bucket subEntry : subTerms.getBuckets()) &#123;</div><div class=\"line\">            Sum sum1 = subEntry.getAggregations().get(&quot;total_sales&quot;); //取得销量的汇总</div><div class=\"line\">            double total_sales = sum1.getValue();</div><div class=\"line\">            System.out.println(subEntry.getKey() + &quot; 订单数:  &quot; + subEntry.getDocCount() + &quot;  销量: &quot; + total_sales); //店铺和订单数量和销量</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    long endTime = System.currentTimeMillis();</div><div class=\"line\">    System.out.println(&quot;查询耗时&quot; + ( endTime - beginTime ) + &quot;毫秒&quot;);</div></pre></td></tr></table></figure>\n<h4 id=\"demo地址\"><a href=\"#demo地址\" class=\"headerlink\" title=\"demo地址\"></a>demo地址</h4><p><a href=\"https://github.com/whiney/springboot-elasticsearch.git\" target=\"_blank\" rel=\"external\">springboot-elasticsearch</a></p>\n<ol>\n<li>启动项目</li>\n<li>访问<a href=\"http://localhost:9999/test\" target=\"_blank\" rel=\"external\">http://localhost:9999/test</a></li>\n<li>查看后端打印</li>\n</ol>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-search.html\" target=\"_blank\" rel=\"external\">Search API</a></p>\n<p>有一些坑是我领导踩得，部分代码已得授权。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"springboot-elasticsearch\"><a href=\"#springboot-elasticsearch\" class=\"headerlink\" title=\"springboot-elasticsearch\"></a>springboot-elasticsearch</h2><blockquote>\n<p>基于springboot的web项目，通过elasticsearch提供的Java API 进行查询操作.</p>\n</blockquote>\n<h4 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h4><p>项目在一个查询要在亚秒级计算（分组、累加、平均）大量数据的结果。官方提供的API过于简单，自己在做项目中遇到了一些坑，并总结了一些API的使用，简单分享一下。</p>\n<h4 id=\"前置条件\"><a href=\"#前置条件\" class=\"headerlink\" title=\"前置条件\"></a>前置条件</h4><p>有一个elasticsearch服务</p>\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><blockquote>\n<p>demo是基于springboot快速构建了一个web应用。elasticsearch提供了一个客户端:<code>TransportClient</code>,首先我们来配置一下</p>\n</blockquote>\n<h5 id=\"如果在main方法里面执行可以直接创建一个客户端连接\"><a href=\"#如果在main方法里面执行可以直接创建一个客户端连接\" class=\"headerlink\" title=\"如果在main方法里面执行可以直接创建一个客户端连接\"></a>如果在main方法里面执行可以直接创建一个客户端连接</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">TransportClient client = new PreBuiltTransportClient(Settings.EMPTY)</div><div class=\"line\">                .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(&quot;172.16.3.121&quot;), 9300));</div></pre></td></tr></table></figure>\n<h5 id=\"如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\"><a href=\"#如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\" class=\"headerlink\" title=\"如果在springboot项目中。配置一下，这样我们可以直接注入使用了。\"></a>如果在springboot项目中。配置一下，这样我们可以直接注入使用了。</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div></pre></td><td class=\"code\"><pre><div class=\"line\">@Configuration</div><div class=\"line\">public class ElasticSearchConfig &#123;</div><div class=\"line\"></div><div class=\"line\">    @Value(&quot;$&#123;spring.elasticsearch.host&#125;&quot;)</div><div class=\"line\">    private String host;//elasticsearch的地址</div><div class=\"line\"></div><div class=\"line\">    @Value(&quot;$&#123;spring.elasticsearch.port&#125;&quot;)</div><div class=\"line\">    private Integer port;//elasticsearch的端口</div><div class=\"line\"></div><div class=\"line\">    private static final Logger LOG = LogManager.getLogger(ElasticSearchConfig.class);</div><div class=\"line\"></div><div class=\"line\">    @Bean</div><div class=\"line\">    public TransportClient client()&#123;</div><div class=\"line\">        TransportClient client = null;</div><div class=\"line\">        try &#123;</div><div class=\"line\"></div><div class=\"line\">            client = new PreBuiltTransportClient(Settings.EMPTY)</div><div class=\"line\">                    .addTransportAddress(new InetSocketTransportAddress(InetAddress.getByName(host), port));</div><div class=\"line\">        &#125; catch (UnknownHostException e) &#123;</div><div class=\"line\">            LOG.error(&quot;创建elasticsearch客户端失败&quot;);</div><div class=\"line\">            e.printStackTrace();</div><div class=\"line\">        &#125;</div><div class=\"line\">        LOG.info(&quot;创建elasticsearch客户端成功&quot;);</div><div class=\"line\">        return client;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">配置完毕之后，我们就可以使用了。这里写了一个简单的demo，汇总了常用的一些API使用。</div></pre></td></tr></table></figure>\n<h4 id=\"代码示例\"><a href=\"#代码示例\" class=\"headerlink\" title=\"代码示例\"></a>代码示例</h4><blockquote>\n<p>这个代码示例满足了查询所需，查询条件，分组计算，分组排序等</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div></pre></td><td class=\"code\"><pre><div class=\"line\">Map&lt;String,Object&gt; map = Collections.emptyMap();</div><div class=\"line\"></div><div class=\"line\">    Script script = new Script(ScriptType.INLINE, &quot;painless&quot;,&quot;params._value0 &gt; 0&quot;,map);  //提前定义好查询销量是否大于1000的脚本，类似SQL里面的having</div><div class=\"line\"></div><div class=\"line\">    long beginTime = System.currentTimeMillis();</div><div class=\"line\"></div><div class=\"line\">    SearchResponse sr = client.prepareSearch(&quot;adele&quot;).setTypes(&quot;sale&quot;)</div><div class=\"line\">            .setQuery(QueryBuilders.boolQuery()</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;store_name.keyword&quot;, &quot;xxx旗舰店&quot;))  //挨个设置查询条件，没有就不加，如果是字符串类型的，要加keyword后缀</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;department_name.keyword&quot;, &quot;玎&quot;))</div><div class=\"line\">                    .must(QueryBuilders.termQuery(&quot;category_name.keyword&quot;, &quot;T恤&quot;))</div><div class=\"line\">                    .must(QueryBuilders.rangeQuery(&quot;pay_date&quot;).gt(&quot;2017-03-07&quot;).lt(&quot;2017-07-09&quot;))</div><div class=\"line\">            ).addAggregation(</div><div class=\"line\">                    AggregationBuilders.terms(&quot;by_product_code&quot;).field(&quot;product_code.keyword&quot;).size(500) //按货号分组，最多查500个货号.SKU直接改字段名字就可以</div><div class=\"line\">                            .subAggregation(AggregationBuilders.terms(&quot;by_store_name&quot;).field(&quot;store_name.keyword&quot;).size(50) //按店铺分组，不显示店铺可以过滤掉这一行，下边相应减少一个循环</div><div class=\"line\">                                    .subAggregation(AggregationBuilders.sum(&quot;total_sales&quot;).field(&quot;quantity&quot;))  //分组计算销量汇总</div><div class=\"line\">                                    .subAggregation(AggregationBuilders.sum(&quot;total_sales_amount&quot;).field(&quot;amount_actual&quot;))  //分组计算实付款汇总，需要加其他汇总的在这里依次加</div><div class=\"line\">                                    .subAggregation(PipelineAggregatorBuilders.bucketSelector(&quot;sales_bucket_filter&quot;,script,&quot;total_sales&quot;)))//查询是否大于指定值</div><div class=\"line\">                            .order(Terms.Order.compound(Terms.Order.aggregation(&quot;total_calculate_sale_amount&quot;,false)))) //分组排序</div><div class=\"line\"></div><div class=\"line\">            .execute().actionGet();</div><div class=\"line\"></div><div class=\"line\">    Terms terms = sr.getAggregations().get(&quot;by_product_code&quot;);   //查询遍历第一个根据货号分组的aggregation</div><div class=\"line\"></div><div class=\"line\">    System.out.println(terms.getBuckets().size());</div><div class=\"line\">    for (Terms.Bucket entry : terms.getBuckets()) &#123;</div><div class=\"line\">        System.out.println(&quot;------------------&quot;);</div><div class=\"line\">        System.out.println(&quot;【 &quot; + entry.getKey() + &quot; 】订单数 : &quot; + entry.getDocCount() );</div><div class=\"line\"></div><div class=\"line\">        Terms subTerms = entry.getAggregations().get(&quot;by_store_name&quot;);    //查询遍历第二个根据店铺分组的aggregation</div><div class=\"line\">        for (Terms.Bucket subEntry : subTerms.getBuckets()) &#123;</div><div class=\"line\">            Sum sum1 = subEntry.getAggregations().get(&quot;total_sales&quot;); //取得销量的汇总</div><div class=\"line\">            double total_sales = sum1.getValue();</div><div class=\"line\">            System.out.println(subEntry.getKey() + &quot; 订单数:  &quot; + subEntry.getDocCount() + &quot;  销量: &quot; + total_sales); //店铺和订单数量和销量</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    long endTime = System.currentTimeMillis();</div><div class=\"line\">    System.out.println(&quot;查询耗时&quot; + ( endTime - beginTime ) + &quot;毫秒&quot;);</div></pre></td></tr></table></figure>\n<h4 id=\"demo地址\"><a href=\"#demo地址\" class=\"headerlink\" title=\"demo地址\"></a>demo地址</h4><p><a href=\"https://github.com/whiney/springboot-elasticsearch.git\" target=\"_blank\" rel=\"external\">springboot-elasticsearch</a></p>\n<ol>\n<li>启动项目</li>\n<li>访问<a href=\"http://localhost:9999/test\" target=\"_blank\" rel=\"external\">http://localhost:9999/test</a></li>\n<li>查看后端打印</li>\n</ol>\n<h4 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h4><p><a href=\"https://www.elastic.co/guide/en/elasticsearch/client/java-api/current/java-search.html\" target=\"_blank\" rel=\"external\">Search API</a></p>\n<p>有一些坑是我领导踩得，部分代码已得授权。</p>"},{"title":"springboot-swagger","date":"2018-04-28T09:52:55.000Z","comments":1,"_content":"接口管理的强大工具。demo地址在文章最后\n\n项目现在前后端分离，需要一个API的管理工具，在分析了如下几个最终选择了，swagger。比较主流的方式。\n<!--more-->\n#### API管理\n+ [swagger](https://swagger.io/)\n+ [RAP](https://github.com/thx/RAP) 阿里出品，以开发为核心对接口维护\n+ POSTMAN \n+ [DOClever](https://github.com/sx1989827/DOClever) 可视化接口管理工具，分析接口，校验接口，采用了JavaScript\n\n\n\n#### 十分钟搭建以springboot为项目的API管理\n> demo为第二种方式，也是官方推荐\n\n##### 第一步\n> 添加maven包\n###### 第一种方式：\n```\n<!-- https://mvnrepository.com/artifact/com.mangofactory/swagger-springmvc -->\n<dependency>\n    <groupId>com.mangofactory</groupId>\n    <artifactId>swagger-springmvc</artifactId>\n    <version>1.0.2</version>\n</dependency>\n\n```\n###### 第二种方式\n\n```\n <dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.6.1</version>\n</dependency>\n\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.6.1</version>\n</dependency>\n```\n> 官方建议是swagger2\n\n#### 第二步骤\n\n> 添加Configuration配置\n```\npackage com.swagger.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.PathSelectors;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\n\n@Configuration\npublic class SwaggerConfig {\n\n    @Bean\n    public Docket swaggerSpringMvcPlugin(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.any())\n                .paths(PathSelectors.any())\n                .build();\n    }\n\n    private ApiInfo apiInfo(){\n        return new ApiInfoBuilder()\n                .title(\"springboot利用swagger构建api文档\")\n                .description(\"简单优雅的restfun风格\")\n                .version(\"1.0\")\n                .build();\n\n    }\n\n}\n```\n#### 第三步\n\n启动springboot项目，访问:localhost:\n\n```\nhttp://localhost:9999/swagger-ui.html\n```\n\n![swagger](http://og3rfccos.bkt.clouddn.com/swagger.png)\n\n[springboot-swagger](https://github.com/whiney/springboot-swagger)\n\n","source":"_posts/springboot-swagger.md","raw":"---\ntitle: springboot-swagger\ndate: 2018-04-28 17:52:55\ncomments: true\ntags:\n  - springboot\n  - swagger\ncategories: springboot\n---\n接口管理的强大工具。demo地址在文章最后\n\n项目现在前后端分离，需要一个API的管理工具，在分析了如下几个最终选择了，swagger。比较主流的方式。\n<!--more-->\n#### API管理\n+ [swagger](https://swagger.io/)\n+ [RAP](https://github.com/thx/RAP) 阿里出品，以开发为核心对接口维护\n+ POSTMAN \n+ [DOClever](https://github.com/sx1989827/DOClever) 可视化接口管理工具，分析接口，校验接口，采用了JavaScript\n\n\n\n#### 十分钟搭建以springboot为项目的API管理\n> demo为第二种方式，也是官方推荐\n\n##### 第一步\n> 添加maven包\n###### 第一种方式：\n```\n<!-- https://mvnrepository.com/artifact/com.mangofactory/swagger-springmvc -->\n<dependency>\n    <groupId>com.mangofactory</groupId>\n    <artifactId>swagger-springmvc</artifactId>\n    <version>1.0.2</version>\n</dependency>\n\n```\n###### 第二种方式\n\n```\n <dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger2</artifactId>\n    <version>2.6.1</version>\n</dependency>\n\n<dependency>\n    <groupId>io.springfox</groupId>\n    <artifactId>springfox-swagger-ui</artifactId>\n    <version>2.6.1</version>\n</dependency>\n```\n> 官方建议是swagger2\n\n#### 第二步骤\n\n> 添加Configuration配置\n```\npackage com.swagger.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport springfox.documentation.builders.ApiInfoBuilder;\nimport springfox.documentation.builders.PathSelectors;\nimport springfox.documentation.builders.RequestHandlerSelectors;\nimport springfox.documentation.service.ApiInfo;\nimport springfox.documentation.spi.DocumentationType;\nimport springfox.documentation.spring.web.plugins.Docket;\n\n@Configuration\npublic class SwaggerConfig {\n\n    @Bean\n    public Docket swaggerSpringMvcPlugin(){\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                .apis(RequestHandlerSelectors.any())\n                .paths(PathSelectors.any())\n                .build();\n    }\n\n    private ApiInfo apiInfo(){\n        return new ApiInfoBuilder()\n                .title(\"springboot利用swagger构建api文档\")\n                .description(\"简单优雅的restfun风格\")\n                .version(\"1.0\")\n                .build();\n\n    }\n\n}\n```\n#### 第三步\n\n启动springboot项目，访问:localhost:\n\n```\nhttp://localhost:9999/swagger-ui.html\n```\n\n![swagger](http://og3rfccos.bkt.clouddn.com/swagger.png)\n\n[springboot-swagger](https://github.com/whiney/springboot-swagger)\n\n","slug":"springboot-swagger","published":1,"updated":"2019-03-25T07:04:44.212Z","layout":"post","photos":[],"link":"","_id":"cjtseez4k0005muhw93h9ndy6","content":"<p>接口管理的强大工具。demo地址在文章最后</p>\n<p>项目现在前后端分离，需要一个API的管理工具，在分析了如下几个最终选择了，swagger。比较主流的方式。<br><a id=\"more\"></a></p>\n<h4 id=\"API管理\"><a href=\"#API管理\" class=\"headerlink\" title=\"API管理\"></a>API管理</h4><ul>\n<li><a href=\"https://swagger.io/\" target=\"_blank\" rel=\"external\">swagger</a></li>\n<li><a href=\"https://github.com/thx/RAP\" target=\"_blank\" rel=\"external\">RAP</a> 阿里出品，以开发为核心对接口维护</li>\n<li>POSTMAN </li>\n<li><a href=\"https://github.com/sx1989827/DOClever\" target=\"_blank\" rel=\"external\">DOClever</a> 可视化接口管理工具，分析接口，校验接口，采用了JavaScript</li>\n</ul>\n<h4 id=\"十分钟搭建以springboot为项目的API管理\"><a href=\"#十分钟搭建以springboot为项目的API管理\" class=\"headerlink\" title=\"十分钟搭建以springboot为项目的API管理\"></a>十分钟搭建以springboot为项目的API管理</h4><blockquote>\n<p>demo为第二种方式，也是官方推荐</p>\n</blockquote>\n<h5 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h5><blockquote>\n<p>添加maven包</p>\n<h6 id=\"第一种方式：\"><a href=\"#第一种方式：\" class=\"headerlink\" title=\"第一种方式：\"></a>第一种方式：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- https://mvnrepository.com/artifact/com.mangofactory/swagger-springmvc --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.mangofactory&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;swagger-springmvc&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0.2&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</blockquote>\n<h6 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>官方建议是swagger2</p>\n</blockquote>\n<h4 id=\"第二步骤\"><a href=\"#第二步骤\" class=\"headerlink\" title=\"第二步骤\"></a>第二步骤</h4><blockquote>\n<p>添加Configuration配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.swagger.config;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.annotation.Bean;</div><div class=\"line\">import org.springframework.context.annotation.Configuration;</div><div class=\"line\">import springfox.documentation.builders.ApiInfoBuilder;</div><div class=\"line\">import springfox.documentation.builders.PathSelectors;</div><div class=\"line\">import springfox.documentation.builders.RequestHandlerSelectors;</div><div class=\"line\">import springfox.documentation.service.ApiInfo;</div><div class=\"line\">import springfox.documentation.spi.DocumentationType;</div><div class=\"line\">import springfox.documentation.spring.web.plugins.Docket;</div><div class=\"line\"></div><div class=\"line\">@Configuration</div><div class=\"line\">public class SwaggerConfig &#123;</div><div class=\"line\"></div><div class=\"line\">    @Bean</div><div class=\"line\">    public Docket swaggerSpringMvcPlugin()&#123;</div><div class=\"line\">        return new Docket(DocumentationType.SWAGGER_2)</div><div class=\"line\">                .apiInfo(apiInfo())</div><div class=\"line\">                .select()</div><div class=\"line\">                .apis(RequestHandlerSelectors.any())</div><div class=\"line\">                .paths(PathSelectors.any())</div><div class=\"line\">                .build();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private ApiInfo apiInfo()&#123;</div><div class=\"line\">        return new ApiInfoBuilder()</div><div class=\"line\">                .title(&quot;springboot利用swagger构建api文档&quot;)</div><div class=\"line\">                .description(&quot;简单优雅的restfun风格&quot;)</div><div class=\"line\">                .version(&quot;1.0&quot;)</div><div class=\"line\">                .build();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h4><p>启动springboot项目，访问:localhost:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:9999/swagger-ui.html</div></pre></td></tr></table></figure>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/swagger.png\" alt=\"swagger\"></p>\n<p><a href=\"https://github.com/whiney/springboot-swagger\" target=\"_blank\" rel=\"external\">springboot-swagger</a></p>\n","site":{"data":{}},"excerpt":"<p>接口管理的强大工具。demo地址在文章最后</p>\n<p>项目现在前后端分离，需要一个API的管理工具，在分析了如下几个最终选择了，swagger。比较主流的方式。<br>","more":"</p>\n<h4 id=\"API管理\"><a href=\"#API管理\" class=\"headerlink\" title=\"API管理\"></a>API管理</h4><ul>\n<li><a href=\"https://swagger.io/\" target=\"_blank\" rel=\"external\">swagger</a></li>\n<li><a href=\"https://github.com/thx/RAP\" target=\"_blank\" rel=\"external\">RAP</a> 阿里出品，以开发为核心对接口维护</li>\n<li>POSTMAN </li>\n<li><a href=\"https://github.com/sx1989827/DOClever\" target=\"_blank\" rel=\"external\">DOClever</a> 可视化接口管理工具，分析接口，校验接口，采用了JavaScript</li>\n</ul>\n<h4 id=\"十分钟搭建以springboot为项目的API管理\"><a href=\"#十分钟搭建以springboot为项目的API管理\" class=\"headerlink\" title=\"十分钟搭建以springboot为项目的API管理\"></a>十分钟搭建以springboot为项目的API管理</h4><blockquote>\n<p>demo为第二种方式，也是官方推荐</p>\n</blockquote>\n<h5 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h5><blockquote>\n<p>添加maven包</p>\n<h6 id=\"第一种方式：\"><a href=\"#第一种方式：\" class=\"headerlink\" title=\"第一种方式：\"></a>第一种方式：</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- https://mvnrepository.com/artifact/com.mangofactory/swagger-springmvc --&gt;</div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;com.mangofactory&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;swagger-springmvc&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;1.0.2&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n</blockquote>\n<h6 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"> &lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;dependency&gt;</div><div class=\"line\">    &lt;groupId&gt;io.springfox&lt;/groupId&gt;</div><div class=\"line\">    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</div><div class=\"line\">    &lt;version&gt;2.6.1&lt;/version&gt;</div><div class=\"line\">&lt;/dependency&gt;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>官方建议是swagger2</p>\n</blockquote>\n<h4 id=\"第二步骤\"><a href=\"#第二步骤\" class=\"headerlink\" title=\"第二步骤\"></a>第二步骤</h4><blockquote>\n<p>添加Configuration配置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\">package com.swagger.config;</div><div class=\"line\"></div><div class=\"line\">import org.springframework.context.annotation.Bean;</div><div class=\"line\">import org.springframework.context.annotation.Configuration;</div><div class=\"line\">import springfox.documentation.builders.ApiInfoBuilder;</div><div class=\"line\">import springfox.documentation.builders.PathSelectors;</div><div class=\"line\">import springfox.documentation.builders.RequestHandlerSelectors;</div><div class=\"line\">import springfox.documentation.service.ApiInfo;</div><div class=\"line\">import springfox.documentation.spi.DocumentationType;</div><div class=\"line\">import springfox.documentation.spring.web.plugins.Docket;</div><div class=\"line\"></div><div class=\"line\">@Configuration</div><div class=\"line\">public class SwaggerConfig &#123;</div><div class=\"line\"></div><div class=\"line\">    @Bean</div><div class=\"line\">    public Docket swaggerSpringMvcPlugin()&#123;</div><div class=\"line\">        return new Docket(DocumentationType.SWAGGER_2)</div><div class=\"line\">                .apiInfo(apiInfo())</div><div class=\"line\">                .select()</div><div class=\"line\">                .apis(RequestHandlerSelectors.any())</div><div class=\"line\">                .paths(PathSelectors.any())</div><div class=\"line\">                .build();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    private ApiInfo apiInfo()&#123;</div><div class=\"line\">        return new ApiInfoBuilder()</div><div class=\"line\">                .title(&quot;springboot利用swagger构建api文档&quot;)</div><div class=\"line\">                .description(&quot;简单优雅的restfun风格&quot;)</div><div class=\"line\">                .version(&quot;1.0&quot;)</div><div class=\"line\">                .build();</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"第三步\"><a href=\"#第三步\" class=\"headerlink\" title=\"第三步\"></a>第三步</h4><p>启动springboot项目，访问:localhost:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://localhost:9999/swagger-ui.html</div></pre></td></tr></table></figure>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/swagger.png\" alt=\"swagger\"></p>\n<p><a href=\"https://github.com/whiney/springboot-swagger\" target=\"_blank\" rel=\"external\">springboot-swagger</a></p>"},{"title":"我们仨","date":"2016-07-01T07:48:41.000Z","_content":"\n   我是一个反应慢的人。\n\n   前段时间，杨绛先生去世，看到朋友圈里各种刷屏，我有些恍如隔世的感觉。\n\n   这些人也许可能都不知道杨绛先生是男还是女吧！\n\n   <!--more-->\n\n   《我们仨》最初是由杨绛先生的爱女离世之前想写的，当时已写了几章！可是，病情加重，爱女心切的她劝其停笔，这一停，便是终了。\n\n   杨绛先生92岁开始提起续写这本书，可能有些人说不是续写，而是重写。而我认为是续！\n\n   这本书可以分为二部分，梦和忆！\n\n   梦，是一个长达万里的梦，一个沉重的梦。一生的伴侣，唯一的女儿相继离世。杨绛先生用梦幻的方式表达了出来。古驿道上的相聚相失，看完之后有种压抑的感觉，也许正如阿圆说的：梦想为老，想累了要梦魇的！\n\n  忆，是一生的回忆。\n\n  遇到钱先生，钱钟书是一个两耳不闻窗外事的读书人，在京多年，却没出门几次，每每都是杨绛带其出门，他们称之为“探险”。从牛津到巴黎再到回国的历程中，我觉得钱钟书是她的孩子，需要她照顾的孩子。我也明白了，为何人们称杨绛为先生的原因。\n\n   喜得爱女，爸爸和我最哥们。钱媛继承了父母的一切优点，她是一个三好学生，也是一个好老师，治学严谨，关怀学生。小时候乖巧，听话。长大了，会照顾人，想哥们，像姐妹！\n\n   这是一个由三人组成的学者家庭的一生，单纯而温馨。\n\n   文章结尾描述到，九七年早春，钱媛去世，九八年岁末，钱钟书去世，他们仨就这么走散了，看到这里有些痛心疾首的意味！\n\n   想到前段时间，杨绛先生的去世，不觉有些莞尔，没有不敬的味道，而是想到他仨又相聚了。这篇读后感的开头，我便说了，我是一个反应慢的人。","source":"_posts/我们仨.md","raw":"---\ntitle: 我们仨\ndate: 2016-07-01 15:48:41\ntags:\n  - 杨绛\n  - 亲情\ncategories: 读后感\n---\n\n   我是一个反应慢的人。\n\n   前段时间，杨绛先生去世，看到朋友圈里各种刷屏，我有些恍如隔世的感觉。\n\n   这些人也许可能都不知道杨绛先生是男还是女吧！\n\n   <!--more-->\n\n   《我们仨》最初是由杨绛先生的爱女离世之前想写的，当时已写了几章！可是，病情加重，爱女心切的她劝其停笔，这一停，便是终了。\n\n   杨绛先生92岁开始提起续写这本书，可能有些人说不是续写，而是重写。而我认为是续！\n\n   这本书可以分为二部分，梦和忆！\n\n   梦，是一个长达万里的梦，一个沉重的梦。一生的伴侣，唯一的女儿相继离世。杨绛先生用梦幻的方式表达了出来。古驿道上的相聚相失，看完之后有种压抑的感觉，也许正如阿圆说的：梦想为老，想累了要梦魇的！\n\n  忆，是一生的回忆。\n\n  遇到钱先生，钱钟书是一个两耳不闻窗外事的读书人，在京多年，却没出门几次，每每都是杨绛带其出门，他们称之为“探险”。从牛津到巴黎再到回国的历程中，我觉得钱钟书是她的孩子，需要她照顾的孩子。我也明白了，为何人们称杨绛为先生的原因。\n\n   喜得爱女，爸爸和我最哥们。钱媛继承了父母的一切优点，她是一个三好学生，也是一个好老师，治学严谨，关怀学生。小时候乖巧，听话。长大了，会照顾人，想哥们，像姐妹！\n\n   这是一个由三人组成的学者家庭的一生，单纯而温馨。\n\n   文章结尾描述到，九七年早春，钱媛去世，九八年岁末，钱钟书去世，他们仨就这么走散了，看到这里有些痛心疾首的意味！\n\n   想到前段时间，杨绛先生的去世，不觉有些莞尔，没有不敬的味道，而是想到他仨又相聚了。这篇读后感的开头，我便说了，我是一个反应慢的人。","slug":"我们仨","published":1,"updated":"2019-03-25T07:01:29.133Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez4l0006muhwle2mmiz4","content":"<p>   我是一个反应慢的人。</p>\n<p>   前段时间，杨绛先生去世，看到朋友圈里各种刷屏，我有些恍如隔世的感觉。</p>\n<p>   这些人也许可能都不知道杨绛先生是男还是女吧！</p>\n   <a id=\"more\"></a>\n<p>   《我们仨》最初是由杨绛先生的爱女离世之前想写的，当时已写了几章！可是，病情加重，爱女心切的她劝其停笔，这一停，便是终了。</p>\n<p>   杨绛先生92岁开始提起续写这本书，可能有些人说不是续写，而是重写。而我认为是续！</p>\n<p>   这本书可以分为二部分，梦和忆！</p>\n<p>   梦，是一个长达万里的梦，一个沉重的梦。一生的伴侣，唯一的女儿相继离世。杨绛先生用梦幻的方式表达了出来。古驿道上的相聚相失，看完之后有种压抑的感觉，也许正如阿圆说的：梦想为老，想累了要梦魇的！</p>\n<p>  忆，是一生的回忆。</p>\n<p>  遇到钱先生，钱钟书是一个两耳不闻窗外事的读书人，在京多年，却没出门几次，每每都是杨绛带其出门，他们称之为“探险”。从牛津到巴黎再到回国的历程中，我觉得钱钟书是她的孩子，需要她照顾的孩子。我也明白了，为何人们称杨绛为先生的原因。</p>\n<p>   喜得爱女，爸爸和我最哥们。钱媛继承了父母的一切优点，她是一个三好学生，也是一个好老师，治学严谨，关怀学生。小时候乖巧，听话。长大了，会照顾人，想哥们，像姐妹！</p>\n<p>   这是一个由三人组成的学者家庭的一生，单纯而温馨。</p>\n<p>   文章结尾描述到，九七年早春，钱媛去世，九八年岁末，钱钟书去世，他们仨就这么走散了，看到这里有些痛心疾首的意味！</p>\n<p>   想到前段时间，杨绛先生的去世，不觉有些莞尔，没有不敬的味道，而是想到他仨又相聚了。这篇读后感的开头，我便说了，我是一个反应慢的人。</p>\n","site":{"data":{}},"excerpt":"<p>   我是一个反应慢的人。</p>\n<p>   前段时间，杨绛先生去世，看到朋友圈里各种刷屏，我有些恍如隔世的感觉。</p>\n<p>   这些人也许可能都不知道杨绛先生是男还是女吧！</p>","more":"<p>   《我们仨》最初是由杨绛先生的爱女离世之前想写的，当时已写了几章！可是，病情加重，爱女心切的她劝其停笔，这一停，便是终了。</p>\n<p>   杨绛先生92岁开始提起续写这本书，可能有些人说不是续写，而是重写。而我认为是续！</p>\n<p>   这本书可以分为二部分，梦和忆！</p>\n<p>   梦，是一个长达万里的梦，一个沉重的梦。一生的伴侣，唯一的女儿相继离世。杨绛先生用梦幻的方式表达了出来。古驿道上的相聚相失，看完之后有种压抑的感觉，也许正如阿圆说的：梦想为老，想累了要梦魇的！</p>\n<p>  忆，是一生的回忆。</p>\n<p>  遇到钱先生，钱钟书是一个两耳不闻窗外事的读书人，在京多年，却没出门几次，每每都是杨绛带其出门，他们称之为“探险”。从牛津到巴黎再到回国的历程中，我觉得钱钟书是她的孩子，需要她照顾的孩子。我也明白了，为何人们称杨绛为先生的原因。</p>\n<p>   喜得爱女，爸爸和我最哥们。钱媛继承了父母的一切优点，她是一个三好学生，也是一个好老师，治学严谨，关怀学生。小时候乖巧，听话。长大了，会照顾人，想哥们，像姐妹！</p>\n<p>   这是一个由三人组成的学者家庭的一生，单纯而温馨。</p>\n<p>   文章结尾描述到，九七年早春，钱媛去世，九八年岁末，钱钟书去世，他们仨就这么走散了，看到这里有些痛心疾首的意味！</p>\n<p>   想到前段时间，杨绛先生的去世，不觉有些莞尔，没有不敬的味道，而是想到他仨又相聚了。这篇读后感的开头，我便说了，我是一个反应慢的人。</p>"},{"title":"浅读《乌合之众》+《厚黑学》","date":"2016-11-06T07:52:05.000Z","_content":"\n同事采购了一堆设计的书，《乌合之众》是顺手买的，不过被我截胡了。原因是之前有人推荐过这本书，不过一直很忙，没有读过。\t赶巧的事，这个月阅读的两本书都是有些偏激的。另一本是李宗吾的《厚黑学》，开篇他就说自己的书有些偏激。虽然这两本书有些偏激，我也是在茶余饭后闲读完的。不过读完之后，第一感觉竟然去参加美观大选。哈哈哈，看来下个月茶余饭后要读两本理性些的书了。\n\n<!--more-->\n\n![乌合之众.jpg](http://upload-images.jianshu.io/upload_images/1089029-fa7896864b424400.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 乌合之众\n\n    书中有个例子让我感觉很惊奇。就是说如果大约四十人的团队在表决一件事情的时候。四十个的高等学历的科学家和四十个普通人的决定没有任何的差别。\n    差异吗？\n    我只能说，我很差异。其实浅读一下它的观点，就是说如果一群人在一起，智力就会低下，不如一个人的时候理性，所做的决定就会变得愚蠢。是不是感觉自己很蠢，因为我们生活中到处都是群体生活，独立出来之后反而感觉与整个世界格格不入。\n    书中也多次提到了拿破仑。拿破仑，我们所熟知的就是他是一个军事天才，政治天才。怎么说呢，反正他在我心里和忽必烈一样。这本书解读了拿破仑的成功。因为什么呢？是因为他明白怎么领导一群乌合之众。突然想到了时下的网络道德绑架。网民不就是一群乌合之众吗？举个简单的例子，当我们得知一个明星在某个慈善晚宴没有捐款的时候，在不明所以的情况下，被几个网络喷子完全带跑偏了。开始围攻对方。但是当这阵风吹过之后呢，我们自己冷静下来的时候。发现，自己做到给予别人帮助了吗？为什么去要求别人呢的这种自省心理。\n    当然把喷子和我大拿破仑相比较，我心里是很不舒服的。当时当我阅读这本书的时候，看到拿破仑如何通过不明觉厉的演讲去说服一群部下为其卖命的时候，我心里怎么就那么突然不舒服了呢。\n\n![厚黑.jpg](http://upload-images.jianshu.io/upload_images/1089029-b8367ff8cd17a861.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n####厚黑学\n    何为厚黑，脸厚心黑是也。有人说厚黑误国，我倒是觉得有些小题大做了，不过时下的社会处处都是些脸厚心黑的人倒是真的。\n    第二篇厚黑原理，作者提过一句，如果你读厚黑学，一定要把它放在自己的桌子下面。真正的厚黑是隐藏在黑暗里，明处不予一点表现的。俗称：腹黑。\n    书中的有一个例子让我觉得很靠谱，就是项羽的例子。因为我对古代的大将 有种莫名的崇拜之情。项羽在乌江边自刎这件事儿，我一直觉得是很男人的一件事儿。且籍与江东子弟八千人渡江而西，今无一人还，纵江东父兄怜而王我，我何面目见之？霸气的很。可是心里却有些可惜，当时我觉得如果你过江，东山再起，哪儿还有刘邦那个宵小的天下。在这这本书里，我找到了安慰。要成事儿就得脸厚心黑。项羽是心黑脸不厚。韩信的胯下之辱之后又失败的例子，告诉我们。他是脸厚心不黑。\n    其实这本书，只读开篇厚黑学和厚黑别论就好。因为中间两篇有些让人摸不着头脑，而且太多偏激了，举了一些论证推厚黑学，比如其中一篇关于达尔文的进化论学的修正，我就很摸不到头脑。\n####说两句\n    这两本书都一些偏激。因为《厚黑学》在《乌合之众》之后，所以，《厚黑学》书中对于《乌合之众》有些点评，比如《乌合之众》里面对群体的弱智表现，《厚黑学》里面说是一种合力表现。\n    我一直觉得心理学的书，一定要深度和实践的，我只是浅读。人还是要活的单纯点，比如当我读这两本书的时候，再看网络上面的一些道德绑架和正在进行的美国大选，就忍不住想笑。\n    道德绑架完全符合《乌合之众》，而美国大学完全符合《厚黑学》。\n    最后，推荐你看完这两本书的时候，去看看一部美剧《纸牌屋》。","source":"_posts/浅读《乌合之众》-《厚黑学》.md","raw":"---\ntitle: 浅读《乌合之众》+《厚黑学》\ndate: 2016-11-06 15:52:05\ntags:\n  - 心理学\n  - 厚黑\ncategories: 读后感\n---\n\n同事采购了一堆设计的书，《乌合之众》是顺手买的，不过被我截胡了。原因是之前有人推荐过这本书，不过一直很忙，没有读过。\t赶巧的事，这个月阅读的两本书都是有些偏激的。另一本是李宗吾的《厚黑学》，开篇他就说自己的书有些偏激。虽然这两本书有些偏激，我也是在茶余饭后闲读完的。不过读完之后，第一感觉竟然去参加美观大选。哈哈哈，看来下个月茶余饭后要读两本理性些的书了。\n\n<!--more-->\n\n![乌合之众.jpg](http://upload-images.jianshu.io/upload_images/1089029-fa7896864b424400.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n#### 乌合之众\n\n    书中有个例子让我感觉很惊奇。就是说如果大约四十人的团队在表决一件事情的时候。四十个的高等学历的科学家和四十个普通人的决定没有任何的差别。\n    差异吗？\n    我只能说，我很差异。其实浅读一下它的观点，就是说如果一群人在一起，智力就会低下，不如一个人的时候理性，所做的决定就会变得愚蠢。是不是感觉自己很蠢，因为我们生活中到处都是群体生活，独立出来之后反而感觉与整个世界格格不入。\n    书中也多次提到了拿破仑。拿破仑，我们所熟知的就是他是一个军事天才，政治天才。怎么说呢，反正他在我心里和忽必烈一样。这本书解读了拿破仑的成功。因为什么呢？是因为他明白怎么领导一群乌合之众。突然想到了时下的网络道德绑架。网民不就是一群乌合之众吗？举个简单的例子，当我们得知一个明星在某个慈善晚宴没有捐款的时候，在不明所以的情况下，被几个网络喷子完全带跑偏了。开始围攻对方。但是当这阵风吹过之后呢，我们自己冷静下来的时候。发现，自己做到给予别人帮助了吗？为什么去要求别人呢的这种自省心理。\n    当然把喷子和我大拿破仑相比较，我心里是很不舒服的。当时当我阅读这本书的时候，看到拿破仑如何通过不明觉厉的演讲去说服一群部下为其卖命的时候，我心里怎么就那么突然不舒服了呢。\n\n![厚黑.jpg](http://upload-images.jianshu.io/upload_images/1089029-b8367ff8cd17a861.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n####厚黑学\n    何为厚黑，脸厚心黑是也。有人说厚黑误国，我倒是觉得有些小题大做了，不过时下的社会处处都是些脸厚心黑的人倒是真的。\n    第二篇厚黑原理，作者提过一句，如果你读厚黑学，一定要把它放在自己的桌子下面。真正的厚黑是隐藏在黑暗里，明处不予一点表现的。俗称：腹黑。\n    书中的有一个例子让我觉得很靠谱，就是项羽的例子。因为我对古代的大将 有种莫名的崇拜之情。项羽在乌江边自刎这件事儿，我一直觉得是很男人的一件事儿。且籍与江东子弟八千人渡江而西，今无一人还，纵江东父兄怜而王我，我何面目见之？霸气的很。可是心里却有些可惜，当时我觉得如果你过江，东山再起，哪儿还有刘邦那个宵小的天下。在这这本书里，我找到了安慰。要成事儿就得脸厚心黑。项羽是心黑脸不厚。韩信的胯下之辱之后又失败的例子，告诉我们。他是脸厚心不黑。\n    其实这本书，只读开篇厚黑学和厚黑别论就好。因为中间两篇有些让人摸不着头脑，而且太多偏激了，举了一些论证推厚黑学，比如其中一篇关于达尔文的进化论学的修正，我就很摸不到头脑。\n####说两句\n    这两本书都一些偏激。因为《厚黑学》在《乌合之众》之后，所以，《厚黑学》书中对于《乌合之众》有些点评，比如《乌合之众》里面对群体的弱智表现，《厚黑学》里面说是一种合力表现。\n    我一直觉得心理学的书，一定要深度和实践的，我只是浅读。人还是要活的单纯点，比如当我读这两本书的时候，再看网络上面的一些道德绑架和正在进行的美国大选，就忍不住想笑。\n    道德绑架完全符合《乌合之众》，而美国大学完全符合《厚黑学》。\n    最后，推荐你看完这两本书的时候，去看看一部美剧《纸牌屋》。","slug":"浅读《乌合之众》-《厚黑学》","published":1,"updated":"2019-03-25T07:06:23.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez5n000xmuhwmjvdlxo0","content":"<p>同事采购了一堆设计的书，《乌合之众》是顺手买的，不过被我截胡了。原因是之前有人推荐过这本书，不过一直很忙，没有读过。    赶巧的事，这个月阅读的两本书都是有些偏激的。另一本是李宗吾的《厚黑学》，开篇他就说自己的书有些偏激。虽然这两本书有些偏激，我也是在茶余饭后闲读完的。不过读完之后，第一感觉竟然去参加美观大选。哈哈哈，看来下个月茶余饭后要读两本理性些的书了。</p>\n<a id=\"more\"></a>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-fa7896864b424400.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"乌合之众.jpg\"></p>\n<h4 id=\"乌合之众\"><a href=\"#乌合之众\" class=\"headerlink\" title=\"乌合之众\"></a>乌合之众</h4><pre><code>书中有个例子让我感觉很惊奇。就是说如果大约四十人的团队在表决一件事情的时候。四十个的高等学历的科学家和四十个普通人的决定没有任何的差别。\n差异吗？\n我只能说，我很差异。其实浅读一下它的观点，就是说如果一群人在一起，智力就会低下，不如一个人的时候理性，所做的决定就会变得愚蠢。是不是感觉自己很蠢，因为我们生活中到处都是群体生活，独立出来之后反而感觉与整个世界格格不入。\n书中也多次提到了拿破仑。拿破仑，我们所熟知的就是他是一个军事天才，政治天才。怎么说呢，反正他在我心里和忽必烈一样。这本书解读了拿破仑的成功。因为什么呢？是因为他明白怎么领导一群乌合之众。突然想到了时下的网络道德绑架。网民不就是一群乌合之众吗？举个简单的例子，当我们得知一个明星在某个慈善晚宴没有捐款的时候，在不明所以的情况下，被几个网络喷子完全带跑偏了。开始围攻对方。但是当这阵风吹过之后呢，我们自己冷静下来的时候。发现，自己做到给予别人帮助了吗？为什么去要求别人呢的这种自省心理。\n当然把喷子和我大拿破仑相比较，我心里是很不舒服的。当时当我阅读这本书的时候，看到拿破仑如何通过不明觉厉的演讲去说服一群部下为其卖命的时候，我心里怎么就那么突然不舒服了呢。\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-b8367ff8cd17a861.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"厚黑.jpg\"></p>\n<p>####厚黑学<br>    何为厚黑，脸厚心黑是也。有人说厚黑误国，我倒是觉得有些小题大做了，不过时下的社会处处都是些脸厚心黑的人倒是真的。<br>    第二篇厚黑原理，作者提过一句，如果你读厚黑学，一定要把它放在自己的桌子下面。真正的厚黑是隐藏在黑暗里，明处不予一点表现的。俗称：腹黑。<br>    书中的有一个例子让我觉得很靠谱，就是项羽的例子。因为我对古代的大将 有种莫名的崇拜之情。项羽在乌江边自刎这件事儿，我一直觉得是很男人的一件事儿。且籍与江东子弟八千人渡江而西，今无一人还，纵江东父兄怜而王我，我何面目见之？霸气的很。可是心里却有些可惜，当时我觉得如果你过江，东山再起，哪儿还有刘邦那个宵小的天下。在这这本书里，我找到了安慰。要成事儿就得脸厚心黑。项羽是心黑脸不厚。韩信的胯下之辱之后又失败的例子，告诉我们。他是脸厚心不黑。<br>    其实这本书，只读开篇厚黑学和厚黑别论就好。因为中间两篇有些让人摸不着头脑，而且太多偏激了，举了一些论证推厚黑学，比如其中一篇关于达尔文的进化论学的修正，我就很摸不到头脑。</p>\n<p>####说两句<br>    这两本书都一些偏激。因为《厚黑学》在《乌合之众》之后，所以，《厚黑学》书中对于《乌合之众》有些点评，比如《乌合之众》里面对群体的弱智表现，《厚黑学》里面说是一种合力表现。<br>    我一直觉得心理学的书，一定要深度和实践的，我只是浅读。人还是要活的单纯点，比如当我读这两本书的时候，再看网络上面的一些道德绑架和正在进行的美国大选，就忍不住想笑。<br>    道德绑架完全符合《乌合之众》，而美国大学完全符合《厚黑学》。<br>    最后，推荐你看完这两本书的时候，去看看一部美剧《纸牌屋》。</p>\n","site":{"data":{}},"excerpt":"<p>同事采购了一堆设计的书，《乌合之众》是顺手买的，不过被我截胡了。原因是之前有人推荐过这本书，不过一直很忙，没有读过。    赶巧的事，这个月阅读的两本书都是有些偏激的。另一本是李宗吾的《厚黑学》，开篇他就说自己的书有些偏激。虽然这两本书有些偏激，我也是在茶余饭后闲读完的。不过读完之后，第一感觉竟然去参加美观大选。哈哈哈，看来下个月茶余饭后要读两本理性些的书了。</p>","more":"<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-fa7896864b424400.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"乌合之众.jpg\"></p>\n<h4 id=\"乌合之众\"><a href=\"#乌合之众\" class=\"headerlink\" title=\"乌合之众\"></a>乌合之众</h4><pre><code>书中有个例子让我感觉很惊奇。就是说如果大约四十人的团队在表决一件事情的时候。四十个的高等学历的科学家和四十个普通人的决定没有任何的差别。\n差异吗？\n我只能说，我很差异。其实浅读一下它的观点，就是说如果一群人在一起，智力就会低下，不如一个人的时候理性，所做的决定就会变得愚蠢。是不是感觉自己很蠢，因为我们生活中到处都是群体生活，独立出来之后反而感觉与整个世界格格不入。\n书中也多次提到了拿破仑。拿破仑，我们所熟知的就是他是一个军事天才，政治天才。怎么说呢，反正他在我心里和忽必烈一样。这本书解读了拿破仑的成功。因为什么呢？是因为他明白怎么领导一群乌合之众。突然想到了时下的网络道德绑架。网民不就是一群乌合之众吗？举个简单的例子，当我们得知一个明星在某个慈善晚宴没有捐款的时候，在不明所以的情况下，被几个网络喷子完全带跑偏了。开始围攻对方。但是当这阵风吹过之后呢，我们自己冷静下来的时候。发现，自己做到给予别人帮助了吗？为什么去要求别人呢的这种自省心理。\n当然把喷子和我大拿破仑相比较，我心里是很不舒服的。当时当我阅读这本书的时候，看到拿破仑如何通过不明觉厉的演讲去说服一群部下为其卖命的时候，我心里怎么就那么突然不舒服了呢。\n</code></pre><p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-b8367ff8cd17a861.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"厚黑.jpg\"></p>\n<p>####厚黑学<br>    何为厚黑，脸厚心黑是也。有人说厚黑误国，我倒是觉得有些小题大做了，不过时下的社会处处都是些脸厚心黑的人倒是真的。<br>    第二篇厚黑原理，作者提过一句，如果你读厚黑学，一定要把它放在自己的桌子下面。真正的厚黑是隐藏在黑暗里，明处不予一点表现的。俗称：腹黑。<br>    书中的有一个例子让我觉得很靠谱，就是项羽的例子。因为我对古代的大将 有种莫名的崇拜之情。项羽在乌江边自刎这件事儿，我一直觉得是很男人的一件事儿。且籍与江东子弟八千人渡江而西，今无一人还，纵江东父兄怜而王我，我何面目见之？霸气的很。可是心里却有些可惜，当时我觉得如果你过江，东山再起，哪儿还有刘邦那个宵小的天下。在这这本书里，我找到了安慰。要成事儿就得脸厚心黑。项羽是心黑脸不厚。韩信的胯下之辱之后又失败的例子，告诉我们。他是脸厚心不黑。<br>    其实这本书，只读开篇厚黑学和厚黑别论就好。因为中间两篇有些让人摸不着头脑，而且太多偏激了，举了一些论证推厚黑学，比如其中一篇关于达尔文的进化论学的修正，我就很摸不到头脑。</p>\n<p>####说两句<br>    这两本书都一些偏激。因为《厚黑学》在《乌合之众》之后，所以，《厚黑学》书中对于《乌合之众》有些点评，比如《乌合之众》里面对群体的弱智表现，《厚黑学》里面说是一种合力表现。<br>    我一直觉得心理学的书，一定要深度和实践的，我只是浅读。人还是要活的单纯点，比如当我读这两本书的时候，再看网络上面的一些道德绑架和正在进行的美国大选，就忍不住想笑。<br>    道德绑架完全符合《乌合之众》，而美国大学完全符合《厚黑学》。<br>    最后，推荐你看完这两本书的时候，去看看一部美剧《纸牌屋》。</p>"},{"title":"数据科学","date":"2017-05-24T07:59:20.000Z","_content":"\n数据挖掘、机器学习、人工智能都是数据科学的一个分类。\n<!--more-->\n\n![数据科学带给了我们什么](http://upload-images.jianshu.io/upload_images/1089029-3b841d3d7bdc133a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n## 数据科学是什么\n> 数据挖掘、机器学习、人工智能都是数据科学的一个分类。\n\n接下来，我们从这几个方面来剖析一下数据科学\n\n\n+ 制定目标\n+ 收集和管理数据\n+ 建立模型\n+ 评价和批判模型\n+ 展现结果\n+ 部署模型\n\n## 制定目标\n> 为什么要做这个事情\n\n+ 提升销量\n+ 减少退货损失\n+ 提升转换率\n\n## 收集和管理数据\n\n#### 收集\n+ 初步探索（最大值、最小值、平均值、中位数、分位数、方差、标准差）\n+ 可视化操作\n\n#### 管理\n+ 发现有用的数据\n+ 不断的探索\n\n在收集数据和数据模型之间不断反复\n\n## 建立模型\n> 建立数据模型是数据科学的核心\n\n### 分类\n> 预测某个东西属于哪个类别，使用最广泛\n\n#### 应用领域\n+ 销售预测\n+ 用户购买行为预测\n+ 款式查重\n+ 人脸识别\n+ 声音识别\n+ 图片学习\n+ 深度学习\n\n首先有一个很大的类库，打上标签，通过分类算法，找出共性，学习完成之后，就可以进行分类了。\n支付宝上已经在这方面取得了一些成功。\n\n### 打分\n> 为某事件预测一个数值（比如购买概率、定价）\n\n#### 引用领域\n+ 推荐引擎\n+ 定价模型\n\n预测一个商品的打分，给特定的人定价格。\n\nAlphaGo就是利用的打分和分类\n\n### 排名\n> 排序\n和打分很类似\n\n### 聚类\n> 某个东西现在属于哪个类别\n\n#### 应用领域\n+ 豆瓣九点\n+ 评论信息\n\n这种很容易和分类搞混，它不是预测算法，是由机器自动分类啊。某个东西属于哪个类别。\n因为文本信息很复杂，维度太多了，人工分类很困难，机器聚类有一个比较明确的概念。\n\n\n### 关联\n\n> 找出潜在的相关性\n\n#### 应用领域\n\n+ 啤酒与尿布（虽然是假的）\n\n很出名的啤酒与尿布的故事，因为它是入门的数据模型，可以挖掘潜在的相关性，理论上挖掘出来可靠性多少等。电商里面用在推荐和搭配上\n\n### 特征化\n\n> 绘图或者报表\n\n#### 应用领域\n\n+ 广告投放\n\n打标签，在业务上分组。在电商业务上多用于广告的投放。\n\n## 评价和批判模型\n\n+ 准确率\n+ 召回率\n+ 是否比随机预测或者猜测更好\n+ 是否现实意义\n\n模型好不好，别乱猜要好。比如生男女的几率，通过一系列的模型得出的结果可能比不上你的猜测，因为你的猜测有百分之五十的几率，已经很大了。\n不断的调整参数和新模型，花了一个月时间，准确率可能高了百分之一，也可能准确率讲下了。\n具体怎么算，有类似Apache提供了Mahout等工具来算这些东西\n\n## 展现结果\n\n> 展示和编制分析报告是必不可少的\n\n+ 体现你的目标，一定要有目标，我在这里面根据我的预测应该会出现什么样的结果来解释我的模型。\n+ 展示模型输出的结果，模型的解读，通过一些可视化的工具来很明显的表现出模型的好处。\n+ 置信度，比如：我们预测某个商品下个星期大卖，有百分之七十的可能性。然后让对方来评估风险，在进行生产等操作。很重要。\n\n## 部署模型\n\n> 试运行和不断调整\n\n评价模型 不一定要新的数据, 拿历史数据来评价，训练级和测试级，在模型建立的时期，来判断数据模型的好坏。不能等上线之后。\n\n## 总结\n\n这一节课，我们了解了数据科学是什么，然后怎么制定分析目标，同时解说了几种模型和数据编制分析报告的重要性，还有一些部署模型的注意点。同时对数据科学与时下热门的机器学习和人工智能的关系有了一些了解。并了解了数据科学在实际业务上的一些实际操作。这一章节很重要，虽然信息量和陌生感可能大了一些，但是让我们体会到了我们数据科学之美。\n\n## 下节课预告\n+ 数据探索和管理\n+ 数据基本统计和基本可视化","source":"_posts/数据科学.md","raw":"---\ntitle: 数据科学\ndate: 2017-05-24 15:59:20\ntags:\n  - 机器学习\n  - 大数据\ncategories: 机器学习\n---\n\n数据挖掘、机器学习、人工智能都是数据科学的一个分类。\n<!--more-->\n\n![数据科学带给了我们什么](http://upload-images.jianshu.io/upload_images/1089029-3b841d3d7bdc133a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n\n\n## 数据科学是什么\n> 数据挖掘、机器学习、人工智能都是数据科学的一个分类。\n\n接下来，我们从这几个方面来剖析一下数据科学\n\n\n+ 制定目标\n+ 收集和管理数据\n+ 建立模型\n+ 评价和批判模型\n+ 展现结果\n+ 部署模型\n\n## 制定目标\n> 为什么要做这个事情\n\n+ 提升销量\n+ 减少退货损失\n+ 提升转换率\n\n## 收集和管理数据\n\n#### 收集\n+ 初步探索（最大值、最小值、平均值、中位数、分位数、方差、标准差）\n+ 可视化操作\n\n#### 管理\n+ 发现有用的数据\n+ 不断的探索\n\n在收集数据和数据模型之间不断反复\n\n## 建立模型\n> 建立数据模型是数据科学的核心\n\n### 分类\n> 预测某个东西属于哪个类别，使用最广泛\n\n#### 应用领域\n+ 销售预测\n+ 用户购买行为预测\n+ 款式查重\n+ 人脸识别\n+ 声音识别\n+ 图片学习\n+ 深度学习\n\n首先有一个很大的类库，打上标签，通过分类算法，找出共性，学习完成之后，就可以进行分类了。\n支付宝上已经在这方面取得了一些成功。\n\n### 打分\n> 为某事件预测一个数值（比如购买概率、定价）\n\n#### 引用领域\n+ 推荐引擎\n+ 定价模型\n\n预测一个商品的打分，给特定的人定价格。\n\nAlphaGo就是利用的打分和分类\n\n### 排名\n> 排序\n和打分很类似\n\n### 聚类\n> 某个东西现在属于哪个类别\n\n#### 应用领域\n+ 豆瓣九点\n+ 评论信息\n\n这种很容易和分类搞混，它不是预测算法，是由机器自动分类啊。某个东西属于哪个类别。\n因为文本信息很复杂，维度太多了，人工分类很困难，机器聚类有一个比较明确的概念。\n\n\n### 关联\n\n> 找出潜在的相关性\n\n#### 应用领域\n\n+ 啤酒与尿布（虽然是假的）\n\n很出名的啤酒与尿布的故事，因为它是入门的数据模型，可以挖掘潜在的相关性，理论上挖掘出来可靠性多少等。电商里面用在推荐和搭配上\n\n### 特征化\n\n> 绘图或者报表\n\n#### 应用领域\n\n+ 广告投放\n\n打标签，在业务上分组。在电商业务上多用于广告的投放。\n\n## 评价和批判模型\n\n+ 准确率\n+ 召回率\n+ 是否比随机预测或者猜测更好\n+ 是否现实意义\n\n模型好不好，别乱猜要好。比如生男女的几率，通过一系列的模型得出的结果可能比不上你的猜测，因为你的猜测有百分之五十的几率，已经很大了。\n不断的调整参数和新模型，花了一个月时间，准确率可能高了百分之一，也可能准确率讲下了。\n具体怎么算，有类似Apache提供了Mahout等工具来算这些东西\n\n## 展现结果\n\n> 展示和编制分析报告是必不可少的\n\n+ 体现你的目标，一定要有目标，我在这里面根据我的预测应该会出现什么样的结果来解释我的模型。\n+ 展示模型输出的结果，模型的解读，通过一些可视化的工具来很明显的表现出模型的好处。\n+ 置信度，比如：我们预测某个商品下个星期大卖，有百分之七十的可能性。然后让对方来评估风险，在进行生产等操作。很重要。\n\n## 部署模型\n\n> 试运行和不断调整\n\n评价模型 不一定要新的数据, 拿历史数据来评价，训练级和测试级，在模型建立的时期，来判断数据模型的好坏。不能等上线之后。\n\n## 总结\n\n这一节课，我们了解了数据科学是什么，然后怎么制定分析目标，同时解说了几种模型和数据编制分析报告的重要性，还有一些部署模型的注意点。同时对数据科学与时下热门的机器学习和人工智能的关系有了一些了解。并了解了数据科学在实际业务上的一些实际操作。这一章节很重要，虽然信息量和陌生感可能大了一些，但是让我们体会到了我们数据科学之美。\n\n## 下节课预告\n+ 数据探索和管理\n+ 数据基本统计和基本可视化","slug":"数据科学","published":1,"updated":"2019-03-25T07:06:48.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez5q000zmuhwg73txotc","content":"<p>数据挖掘、机器学习、人工智能都是数据科学的一个分类。<br><a id=\"more\"></a></p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-3b841d3d7bdc133a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"数据科学带给了我们什么\"></p>\n<h2 id=\"数据科学是什么\"><a href=\"#数据科学是什么\" class=\"headerlink\" title=\"数据科学是什么\"></a>数据科学是什么</h2><blockquote>\n<p>数据挖掘、机器学习、人工智能都是数据科学的一个分类。</p>\n</blockquote>\n<p>接下来，我们从这几个方面来剖析一下数据科学</p>\n<ul>\n<li>制定目标</li>\n<li>收集和管理数据</li>\n<li>建立模型</li>\n<li>评价和批判模型</li>\n<li>展现结果</li>\n<li>部署模型</li>\n</ul>\n<h2 id=\"制定目标\"><a href=\"#制定目标\" class=\"headerlink\" title=\"制定目标\"></a>制定目标</h2><blockquote>\n<p>为什么要做这个事情</p>\n</blockquote>\n<ul>\n<li>提升销量</li>\n<li>减少退货损失</li>\n<li>提升转换率</li>\n</ul>\n<h2 id=\"收集和管理数据\"><a href=\"#收集和管理数据\" class=\"headerlink\" title=\"收集和管理数据\"></a>收集和管理数据</h2><h4 id=\"收集\"><a href=\"#收集\" class=\"headerlink\" title=\"收集\"></a>收集</h4><ul>\n<li>初步探索（最大值、最小值、平均值、中位数、分位数、方差、标准差）</li>\n<li>可视化操作</li>\n</ul>\n<h4 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h4><ul>\n<li>发现有用的数据</li>\n<li>不断的探索</li>\n</ul>\n<p>在收集数据和数据模型之间不断反复</p>\n<h2 id=\"建立模型\"><a href=\"#建立模型\" class=\"headerlink\" title=\"建立模型\"></a>建立模型</h2><blockquote>\n<p>建立数据模型是数据科学的核心</p>\n</blockquote>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><blockquote>\n<p>预测某个东西属于哪个类别，使用最广泛</p>\n</blockquote>\n<h4 id=\"应用领域\"><a href=\"#应用领域\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>销售预测</li>\n<li>用户购买行为预测</li>\n<li>款式查重</li>\n<li>人脸识别</li>\n<li>声音识别</li>\n<li>图片学习</li>\n<li>深度学习</li>\n</ul>\n<p>首先有一个很大的类库，打上标签，通过分类算法，找出共性，学习完成之后，就可以进行分类了。<br>支付宝上已经在这方面取得了一些成功。</p>\n<h3 id=\"打分\"><a href=\"#打分\" class=\"headerlink\" title=\"打分\"></a>打分</h3><blockquote>\n<p>为某事件预测一个数值（比如购买概率、定价）</p>\n</blockquote>\n<h4 id=\"引用领域\"><a href=\"#引用领域\" class=\"headerlink\" title=\"引用领域\"></a>引用领域</h4><ul>\n<li>推荐引擎</li>\n<li>定价模型</li>\n</ul>\n<p>预测一个商品的打分，给特定的人定价格。</p>\n<p>AlphaGo就是利用的打分和分类</p>\n<h3 id=\"排名\"><a href=\"#排名\" class=\"headerlink\" title=\"排名\"></a>排名</h3><blockquote>\n<p>排序<br>和打分很类似</p>\n</blockquote>\n<h3 id=\"聚类\"><a href=\"#聚类\" class=\"headerlink\" title=\"聚类\"></a>聚类</h3><blockquote>\n<p>某个东西现在属于哪个类别</p>\n</blockquote>\n<h4 id=\"应用领域-1\"><a href=\"#应用领域-1\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>豆瓣九点</li>\n<li>评论信息</li>\n</ul>\n<p>这种很容易和分类搞混，它不是预测算法，是由机器自动分类啊。某个东西属于哪个类别。<br>因为文本信息很复杂，维度太多了，人工分类很困难，机器聚类有一个比较明确的概念。</p>\n<h3 id=\"关联\"><a href=\"#关联\" class=\"headerlink\" title=\"关联\"></a>关联</h3><blockquote>\n<p>找出潜在的相关性</p>\n</blockquote>\n<h4 id=\"应用领域-2\"><a href=\"#应用领域-2\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>啤酒与尿布（虽然是假的）</li>\n</ul>\n<p>很出名的啤酒与尿布的故事，因为它是入门的数据模型，可以挖掘潜在的相关性，理论上挖掘出来可靠性多少等。电商里面用在推荐和搭配上</p>\n<h3 id=\"特征化\"><a href=\"#特征化\" class=\"headerlink\" title=\"特征化\"></a>特征化</h3><blockquote>\n<p>绘图或者报表</p>\n</blockquote>\n<h4 id=\"应用领域-3\"><a href=\"#应用领域-3\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>广告投放</li>\n</ul>\n<p>打标签，在业务上分组。在电商业务上多用于广告的投放。</p>\n<h2 id=\"评价和批判模型\"><a href=\"#评价和批判模型\" class=\"headerlink\" title=\"评价和批判模型\"></a>评价和批判模型</h2><ul>\n<li>准确率</li>\n<li>召回率</li>\n<li>是否比随机预测或者猜测更好</li>\n<li>是否现实意义</li>\n</ul>\n<p>模型好不好，别乱猜要好。比如生男女的几率，通过一系列的模型得出的结果可能比不上你的猜测，因为你的猜测有百分之五十的几率，已经很大了。<br>不断的调整参数和新模型，花了一个月时间，准确率可能高了百分之一，也可能准确率讲下了。<br>具体怎么算，有类似Apache提供了Mahout等工具来算这些东西</p>\n<h2 id=\"展现结果\"><a href=\"#展现结果\" class=\"headerlink\" title=\"展现结果\"></a>展现结果</h2><blockquote>\n<p>展示和编制分析报告是必不可少的</p>\n</blockquote>\n<ul>\n<li>体现你的目标，一定要有目标，我在这里面根据我的预测应该会出现什么样的结果来解释我的模型。</li>\n<li>展示模型输出的结果，模型的解读，通过一些可视化的工具来很明显的表现出模型的好处。</li>\n<li>置信度，比如：我们预测某个商品下个星期大卖，有百分之七十的可能性。然后让对方来评估风险，在进行生产等操作。很重要。</li>\n</ul>\n<h2 id=\"部署模型\"><a href=\"#部署模型\" class=\"headerlink\" title=\"部署模型\"></a>部署模型</h2><blockquote>\n<p>试运行和不断调整</p>\n</blockquote>\n<p>评价模型 不一定要新的数据, 拿历史数据来评价，训练级和测试级，在模型建立的时期，来判断数据模型的好坏。不能等上线之后。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一节课，我们了解了数据科学是什么，然后怎么制定分析目标，同时解说了几种模型和数据编制分析报告的重要性，还有一些部署模型的注意点。同时对数据科学与时下热门的机器学习和人工智能的关系有了一些了解。并了解了数据科学在实际业务上的一些实际操作。这一章节很重要，虽然信息量和陌生感可能大了一些，但是让我们体会到了我们数据科学之美。</p>\n<h2 id=\"下节课预告\"><a href=\"#下节课预告\" class=\"headerlink\" title=\"下节课预告\"></a>下节课预告</h2><ul>\n<li>数据探索和管理</li>\n<li>数据基本统计和基本可视化</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>数据挖掘、机器学习、人工智能都是数据科学的一个分类。<br>","more":"</p>\n<p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-3b841d3d7bdc133a.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"数据科学带给了我们什么\"></p>\n<h2 id=\"数据科学是什么\"><a href=\"#数据科学是什么\" class=\"headerlink\" title=\"数据科学是什么\"></a>数据科学是什么</h2><blockquote>\n<p>数据挖掘、机器学习、人工智能都是数据科学的一个分类。</p>\n</blockquote>\n<p>接下来，我们从这几个方面来剖析一下数据科学</p>\n<ul>\n<li>制定目标</li>\n<li>收集和管理数据</li>\n<li>建立模型</li>\n<li>评价和批判模型</li>\n<li>展现结果</li>\n<li>部署模型</li>\n</ul>\n<h2 id=\"制定目标\"><a href=\"#制定目标\" class=\"headerlink\" title=\"制定目标\"></a>制定目标</h2><blockquote>\n<p>为什么要做这个事情</p>\n</blockquote>\n<ul>\n<li>提升销量</li>\n<li>减少退货损失</li>\n<li>提升转换率</li>\n</ul>\n<h2 id=\"收集和管理数据\"><a href=\"#收集和管理数据\" class=\"headerlink\" title=\"收集和管理数据\"></a>收集和管理数据</h2><h4 id=\"收集\"><a href=\"#收集\" class=\"headerlink\" title=\"收集\"></a>收集</h4><ul>\n<li>初步探索（最大值、最小值、平均值、中位数、分位数、方差、标准差）</li>\n<li>可视化操作</li>\n</ul>\n<h4 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h4><ul>\n<li>发现有用的数据</li>\n<li>不断的探索</li>\n</ul>\n<p>在收集数据和数据模型之间不断反复</p>\n<h2 id=\"建立模型\"><a href=\"#建立模型\" class=\"headerlink\" title=\"建立模型\"></a>建立模型</h2><blockquote>\n<p>建立数据模型是数据科学的核心</p>\n</blockquote>\n<h3 id=\"分类\"><a href=\"#分类\" class=\"headerlink\" title=\"分类\"></a>分类</h3><blockquote>\n<p>预测某个东西属于哪个类别，使用最广泛</p>\n</blockquote>\n<h4 id=\"应用领域\"><a href=\"#应用领域\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>销售预测</li>\n<li>用户购买行为预测</li>\n<li>款式查重</li>\n<li>人脸识别</li>\n<li>声音识别</li>\n<li>图片学习</li>\n<li>深度学习</li>\n</ul>\n<p>首先有一个很大的类库，打上标签，通过分类算法，找出共性，学习完成之后，就可以进行分类了。<br>支付宝上已经在这方面取得了一些成功。</p>\n<h3 id=\"打分\"><a href=\"#打分\" class=\"headerlink\" title=\"打分\"></a>打分</h3><blockquote>\n<p>为某事件预测一个数值（比如购买概率、定价）</p>\n</blockquote>\n<h4 id=\"引用领域\"><a href=\"#引用领域\" class=\"headerlink\" title=\"引用领域\"></a>引用领域</h4><ul>\n<li>推荐引擎</li>\n<li>定价模型</li>\n</ul>\n<p>预测一个商品的打分，给特定的人定价格。</p>\n<p>AlphaGo就是利用的打分和分类</p>\n<h3 id=\"排名\"><a href=\"#排名\" class=\"headerlink\" title=\"排名\"></a>排名</h3><blockquote>\n<p>排序<br>和打分很类似</p>\n</blockquote>\n<h3 id=\"聚类\"><a href=\"#聚类\" class=\"headerlink\" title=\"聚类\"></a>聚类</h3><blockquote>\n<p>某个东西现在属于哪个类别</p>\n</blockquote>\n<h4 id=\"应用领域-1\"><a href=\"#应用领域-1\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>豆瓣九点</li>\n<li>评论信息</li>\n</ul>\n<p>这种很容易和分类搞混，它不是预测算法，是由机器自动分类啊。某个东西属于哪个类别。<br>因为文本信息很复杂，维度太多了，人工分类很困难，机器聚类有一个比较明确的概念。</p>\n<h3 id=\"关联\"><a href=\"#关联\" class=\"headerlink\" title=\"关联\"></a>关联</h3><blockquote>\n<p>找出潜在的相关性</p>\n</blockquote>\n<h4 id=\"应用领域-2\"><a href=\"#应用领域-2\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>啤酒与尿布（虽然是假的）</li>\n</ul>\n<p>很出名的啤酒与尿布的故事，因为它是入门的数据模型，可以挖掘潜在的相关性，理论上挖掘出来可靠性多少等。电商里面用在推荐和搭配上</p>\n<h3 id=\"特征化\"><a href=\"#特征化\" class=\"headerlink\" title=\"特征化\"></a>特征化</h3><blockquote>\n<p>绘图或者报表</p>\n</blockquote>\n<h4 id=\"应用领域-3\"><a href=\"#应用领域-3\" class=\"headerlink\" title=\"应用领域\"></a>应用领域</h4><ul>\n<li>广告投放</li>\n</ul>\n<p>打标签，在业务上分组。在电商业务上多用于广告的投放。</p>\n<h2 id=\"评价和批判模型\"><a href=\"#评价和批判模型\" class=\"headerlink\" title=\"评价和批判模型\"></a>评价和批判模型</h2><ul>\n<li>准确率</li>\n<li>召回率</li>\n<li>是否比随机预测或者猜测更好</li>\n<li>是否现实意义</li>\n</ul>\n<p>模型好不好，别乱猜要好。比如生男女的几率，通过一系列的模型得出的结果可能比不上你的猜测，因为你的猜测有百分之五十的几率，已经很大了。<br>不断的调整参数和新模型，花了一个月时间，准确率可能高了百分之一，也可能准确率讲下了。<br>具体怎么算，有类似Apache提供了Mahout等工具来算这些东西</p>\n<h2 id=\"展现结果\"><a href=\"#展现结果\" class=\"headerlink\" title=\"展现结果\"></a>展现结果</h2><blockquote>\n<p>展示和编制分析报告是必不可少的</p>\n</blockquote>\n<ul>\n<li>体现你的目标，一定要有目标，我在这里面根据我的预测应该会出现什么样的结果来解释我的模型。</li>\n<li>展示模型输出的结果，模型的解读，通过一些可视化的工具来很明显的表现出模型的好处。</li>\n<li>置信度，比如：我们预测某个商品下个星期大卖，有百分之七十的可能性。然后让对方来评估风险，在进行生产等操作。很重要。</li>\n</ul>\n<h2 id=\"部署模型\"><a href=\"#部署模型\" class=\"headerlink\" title=\"部署模型\"></a>部署模型</h2><blockquote>\n<p>试运行和不断调整</p>\n</blockquote>\n<p>评价模型 不一定要新的数据, 拿历史数据来评价，训练级和测试级，在模型建立的时期，来判断数据模型的好坏。不能等上线之后。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>这一节课，我们了解了数据科学是什么，然后怎么制定分析目标，同时解说了几种模型和数据编制分析报告的重要性，还有一些部署模型的注意点。同时对数据科学与时下热门的机器学习和人工智能的关系有了一些了解。并了解了数据科学在实际业务上的一些实际操作。这一章节很重要，虽然信息量和陌生感可能大了一些，但是让我们体会到了我们数据科学之美。</p>\n<h2 id=\"下节课预告\"><a href=\"#下节课预告\" class=\"headerlink\" title=\"下节课预告\"></a>下节课预告</h2><ul>\n<li>数据探索和管理</li>\n<li>数据基本统计和基本可视化</li>\n</ul>"},{"title":"项目组目前的GIT管理方式","date":"2017-05-11T07:53:58.000Z","_content":"\n\n\n随着项目组开发人员增多，我们用了Tower协作来管理文档和任务进度。\n但是代码管理这方面还是有点凌乱。原因是我们没有发挥Git的真正的力量。\n团队多人如何协作？\n冲突了怎么办？\n<!--more-->\n\n## 项目组目前的GIT管理方式\n\n\n如何进行发布控制？\n\n这些问题还是一直在出现。一直没有一个良好的规范。\n\n在这样的情况下，我们只做了一点git使用方式的改变，效果却异常的显著。\n\n### 流程\n![image](http://upload-images.jianshu.io/upload_images/1089029-08301c5a2477a4fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 分支创建\n> 为了更好的管理代码，我们设置了三个分支。其中开发人员只关注develop分支。测试人员只关注release分支。发布只用develop分支。\n\n+ develop\n> 开发分支\n+ release\n> 测试分支\n+ master\n> 发布分支\n\n大体的代码分支管理是这样的。接下来，来讲解一下开发流程。\n\n### 工作流\n\n> git-flow 是git的一个扩展级，提供了高层次的库操作。sourceTree等一些git界面工具，已经提供了对它的支持。\n\n#### 新建\n1. git-flow 初始化仓库\n2. git-flow 建立新的功能\n> 这样就会有一个单独的分支\n\n#### 完成\n1. 拉取develop分支的最新代码\n2. git-flow 完成新的功能\n\n### 总结\n\n目前只用到整理一下分支管理和用到了git-flow一些皮毛。虽然只有这些，但是让我们的开发条理了很多，希望在不断和团队的磨合中，能更高效的使用git。到时候再做一些总结。\n\n### 相关链接\n\n[git](https://github.com/xirong/my-git/blob/master/ixirong.com.md)\n\n[git-flow中文清单](http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html)\n\n[A successful Git branching model](http://nvie.com/posts/a-successful-git-branching-model/)","source":"_posts/项目组目前的GIT管理方式.md","raw":"---\ntitle: 项目组目前的GIT管理方式\ndate: 2017-05-11 15:53:58\ntags:\n  - 总结\ncategories: 日常小结\n---\n\n\n\n随着项目组开发人员增多，我们用了Tower协作来管理文档和任务进度。\n但是代码管理这方面还是有点凌乱。原因是我们没有发挥Git的真正的力量。\n团队多人如何协作？\n冲突了怎么办？\n<!--more-->\n\n## 项目组目前的GIT管理方式\n\n\n如何进行发布控制？\n\n这些问题还是一直在出现。一直没有一个良好的规范。\n\n在这样的情况下，我们只做了一点git使用方式的改变，效果却异常的显著。\n\n### 流程\n![image](http://upload-images.jianshu.io/upload_images/1089029-08301c5a2477a4fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n### 分支创建\n> 为了更好的管理代码，我们设置了三个分支。其中开发人员只关注develop分支。测试人员只关注release分支。发布只用develop分支。\n\n+ develop\n> 开发分支\n+ release\n> 测试分支\n+ master\n> 发布分支\n\n大体的代码分支管理是这样的。接下来，来讲解一下开发流程。\n\n### 工作流\n\n> git-flow 是git的一个扩展级，提供了高层次的库操作。sourceTree等一些git界面工具，已经提供了对它的支持。\n\n#### 新建\n1. git-flow 初始化仓库\n2. git-flow 建立新的功能\n> 这样就会有一个单独的分支\n\n#### 完成\n1. 拉取develop分支的最新代码\n2. git-flow 完成新的功能\n\n### 总结\n\n目前只用到整理一下分支管理和用到了git-flow一些皮毛。虽然只有这些，但是让我们的开发条理了很多，希望在不断和团队的磨合中，能更高效的使用git。到时候再做一些总结。\n\n### 相关链接\n\n[git](https://github.com/xirong/my-git/blob/master/ixirong.com.md)\n\n[git-flow中文清单](http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html)\n\n[A successful Git branching model](http://nvie.com/posts/a-successful-git-branching-model/)","slug":"项目组目前的GIT管理方式","published":1,"updated":"2019-03-25T07:05:44.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez5s0012muhwet2l4109","content":"<p>随着项目组开发人员增多，我们用了Tower协作来管理文档和任务进度。<br>但是代码管理这方面还是有点凌乱。原因是我们没有发挥Git的真正的力量。<br>团队多人如何协作？<br>冲突了怎么办？<br><a id=\"more\"></a></p>\n<h2 id=\"项目组目前的GIT管理方式\"><a href=\"#项目组目前的GIT管理方式\" class=\"headerlink\" title=\"项目组目前的GIT管理方式\"></a>项目组目前的GIT管理方式</h2><p>如何进行发布控制？</p>\n<p>这些问题还是一直在出现。一直没有一个良好的规范。</p>\n<p>在这样的情况下，我们只做了一点git使用方式的改变，效果却异常的显著。</p>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-08301c5a2477a4fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<h3 id=\"分支创建\"><a href=\"#分支创建\" class=\"headerlink\" title=\"分支创建\"></a>分支创建</h3><blockquote>\n<p>为了更好的管理代码，我们设置了三个分支。其中开发人员只关注develop分支。测试人员只关注release分支。发布只用develop分支。</p>\n</blockquote>\n<ul>\n<li>develop<blockquote>\n<p>开发分支</p>\n</blockquote>\n</li>\n<li>release<blockquote>\n<p>测试分支</p>\n</blockquote>\n</li>\n<li>master<blockquote>\n<p>发布分支</p>\n</blockquote>\n</li>\n</ul>\n<p>大体的代码分支管理是这样的。接下来，来讲解一下开发流程。</p>\n<h3 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h3><blockquote>\n<p>git-flow 是git的一个扩展级，提供了高层次的库操作。sourceTree等一些git界面工具，已经提供了对它的支持。</p>\n</blockquote>\n<h4 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h4><ol>\n<li>git-flow 初始化仓库</li>\n<li>git-flow 建立新的功能<blockquote>\n<p>这样就会有一个单独的分支</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h4><ol>\n<li>拉取develop分支的最新代码</li>\n<li>git-flow 完成新的功能</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>目前只用到整理一下分支管理和用到了git-flow一些皮毛。虽然只有这些，但是让我们的开发条理了很多，希望在不断和团队的磨合中，能更高效的使用git。到时候再做一些总结。</p>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p><a href=\"https://github.com/xirong/my-git/blob/master/ixirong.com.md\" target=\"_blank\" rel=\"external\">git</a></p>\n<p><a href=\"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html\" target=\"_blank\" rel=\"external\">git-flow中文清单</a></p>\n<p><a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"external\">A successful Git branching model</a></p>\n","site":{"data":{}},"excerpt":"<p>随着项目组开发人员增多，我们用了Tower协作来管理文档和任务进度。<br>但是代码管理这方面还是有点凌乱。原因是我们没有发挥Git的真正的力量。<br>团队多人如何协作？<br>冲突了怎么办？<br>","more":"</p>\n<h2 id=\"项目组目前的GIT管理方式\"><a href=\"#项目组目前的GIT管理方式\" class=\"headerlink\" title=\"项目组目前的GIT管理方式\"></a>项目组目前的GIT管理方式</h2><p>如何进行发布控制？</p>\n<p>这些问题还是一直在出现。一直没有一个良好的规范。</p>\n<p>在这样的情况下，我们只做了一点git使用方式的改变，效果却异常的显著。</p>\n<h3 id=\"流程\"><a href=\"#流程\" class=\"headerlink\" title=\"流程\"></a>流程</h3><p><img src=\"http://upload-images.jianshu.io/upload_images/1089029-08301c5a2477a4fe.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240\" alt=\"image\"></p>\n<h3 id=\"分支创建\"><a href=\"#分支创建\" class=\"headerlink\" title=\"分支创建\"></a>分支创建</h3><blockquote>\n<p>为了更好的管理代码，我们设置了三个分支。其中开发人员只关注develop分支。测试人员只关注release分支。发布只用develop分支。</p>\n</blockquote>\n<ul>\n<li>develop<blockquote>\n<p>开发分支</p>\n</blockquote>\n</li>\n<li>release<blockquote>\n<p>测试分支</p>\n</blockquote>\n</li>\n<li>master<blockquote>\n<p>发布分支</p>\n</blockquote>\n</li>\n</ul>\n<p>大体的代码分支管理是这样的。接下来，来讲解一下开发流程。</p>\n<h3 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h3><blockquote>\n<p>git-flow 是git的一个扩展级，提供了高层次的库操作。sourceTree等一些git界面工具，已经提供了对它的支持。</p>\n</blockquote>\n<h4 id=\"新建\"><a href=\"#新建\" class=\"headerlink\" title=\"新建\"></a>新建</h4><ol>\n<li>git-flow 初始化仓库</li>\n<li>git-flow 建立新的功能<blockquote>\n<p>这样就会有一个单独的分支</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h4><ol>\n<li>拉取develop分支的最新代码</li>\n<li>git-flow 完成新的功能</li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>目前只用到整理一下分支管理和用到了git-flow一些皮毛。虽然只有这些，但是让我们的开发条理了很多，希望在不断和团队的磨合中，能更高效的使用git。到时候再做一些总结。</p>\n<h3 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h3><p><a href=\"https://github.com/xirong/my-git/blob/master/ixirong.com.md\" target=\"_blank\" rel=\"external\">git</a></p>\n<p><a href=\"http://danielkummer.github.io/git-flow-cheatsheet/index.zh_CN.html\" target=\"_blank\" rel=\"external\">git-flow中文清单</a></p>\n<p><a href=\"http://nvie.com/posts/a-successful-git-branching-model/\" target=\"_blank\" rel=\"external\">A successful Git branching model</a></p>"},{"title":"程序员当产品经理是一种什么样的体验","date":"2017-11-09T08:30:50.000Z","_content":"\n每当产品经理让我们改来改去的时候，我们的第一反映都是,把朕的五十米大刀拿来。\n\n<!--more-->\n\n#### 烧死产品\n> 烧死产品是每个程序员的夙愿\n\n\n\n## 目录\n+ 烧死产品\n+ 故事的起因\n+ 去年的产品\n+ 产品深似海\n+ 产品展示\n+ 总结\n\n\n\n\n![烧死产品经理](http://og3rfccos.bkt.clouddn.com/project.jpg)\n\n#### 故事的起因\n\n每年的双十一，是我们电商企业的“年关”，我们开发部门都会给业务部门做一个数据直播间。能让大家实时的查看到自己负责的品牌的销售情况等，\n\n16年那一版是我们做的第一版，那一年和产品经理吵的很凶，所以产品经理罢工。秉着你行你上的原则，经过友好的20分钟会议，这一次产品只出查看指标，产品设计完全由开发人员自由发挥。\n\n#### 去年的产品\n> 业务部门大神设计的产品一定很实用\n\n首先来看一下去年的设计，其实对于业务部门来说，这样的指标展示完全是他们想要的。很全面，甚至有去年今日的数据作对比，产品经理在这之前对各个业务部门调研了很久。\n![烧死产品经理](http://og3rfccos.bkt.clouddn.com/long.jpg)\n但是他们口中想要的，真的就一定是刚需吗。如果你问他们一个问题:某某指标，你们需要吗。我觉得他们一定说要。哪怕是无关紧要的指标，能看到总比看不到强。所以，如果我们一味的去满足业务部门，这一条路是行不通的。所以我们要比他们更了解业务，准确的说更要理解每一次产品的真正定义。\n\n#### 一入产品深似海\n>  站在产品的第一视角去看待问题，是每个程序员的必修课。\n\n这一次的产品设计是一个数据实时的直播间，直播间是一个大屏的设计。所谓的大屏的设计，就是能在一屏之内看到自己所关心或者说迫切知道的数据指标。\n\n关于大屏设计，当然首选阿里出品的数据可视化[datav](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)。可以随意的拖拉出一个大屏的完美结局方案。但是，你会发现，你拖出来的东西，其实并不是那么的美好。然后就会写论文一样，进入了无休止的不动版修改中。\n![不动版](http://og3rfccos.bkt.clouddn.com/11.jpg)\n永远没有定稿，要么布局不可以，要么配色不满意。最可怕的是，当你慢慢找到了合适的配色之后，突然发现应该突出的重点偏轻了。这一点，下面的文章会提到。\n\n#### 什么是好的产品\n>  定稿两个字，永远不会在字典里面出现。\n\n```\n记住，所谓的定稿，只是给用户的那一版。而对于真正的产品是没有最终稿的。\n```\n\n\n**举个例子**:大家都可能会遇到这种情况。交付用户手中的那一稿，往往是N多版本中的前几个版本。我觉得这是因为很多产品经理在慢慢的修改的过程中，突然意识到了设计方向的偏差。\n\n但是这样做，不是没有意义的。多余的版本虽然没有展示给用户，但是这些可都是对于这一次产品设计的思考。思考对于产品设计来说真的是意义重大。思考不仅仅能带来好的产品，更能加深对业务的理解，有了每次的深入的思考，下次的产品只会越来越好。\n\n\n#### 产品展示\n> 捂脸逃跑\n\n这一次的产品设计，我使用的是[sketch](http://www.sketchcn.com/)画的。借鉴的[DataV](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)上面的一些例子。\n\n其实设计的一般，好多地方都是我个人的一些理解，在内测期间，大家提出了很多建议，这一次的产品设计之旅，对于我来说，意义重大，是一次成长。也许下次和产品经理沟通的时候我会少烧死他们几次，更能帮助自己理解业务，写出更好的代码和产品来。\n\n![image](http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%811.jpg)\n\n![image](http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%812.jpg)\n\n\n\n#### 总结\n1. 一个好的产品，除了满足业务部门的需求之外，更应该让他们有惊艳的功能体验。不要一味的推出新品，也不要一味的去仅仅满足。一定要做到取舍有道，用户的使用习惯是完全可以培养出来的。\n2. 我觉得工程师都应该从产品的角度去理解自己做的东西，这样才能更好的用代码去诠释产品经理的真正意图，为后续的模块更新做好支持。\n3. 吵架的时候还是一定要吵的。该烧的也一定不要客气。\n\n\n[sketch官网](http://www.sketchcn.com/)\n\n[DataV数据可视化](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)","source":"_posts/程序员当产品经理是一种什么样的体验.md","raw":"---\ntitle: 程序员当产品经理是一种什么样的体验\ndate: 2017-11-09 16:30:50\ntags:\n  - 产品设计\ncategories: 技术分享\n\n---\n\n每当产品经理让我们改来改去的时候，我们的第一反映都是,把朕的五十米大刀拿来。\n\n<!--more-->\n\n#### 烧死产品\n> 烧死产品是每个程序员的夙愿\n\n\n\n## 目录\n+ 烧死产品\n+ 故事的起因\n+ 去年的产品\n+ 产品深似海\n+ 产品展示\n+ 总结\n\n\n\n\n![烧死产品经理](http://og3rfccos.bkt.clouddn.com/project.jpg)\n\n#### 故事的起因\n\n每年的双十一，是我们电商企业的“年关”，我们开发部门都会给业务部门做一个数据直播间。能让大家实时的查看到自己负责的品牌的销售情况等，\n\n16年那一版是我们做的第一版，那一年和产品经理吵的很凶，所以产品经理罢工。秉着你行你上的原则，经过友好的20分钟会议，这一次产品只出查看指标，产品设计完全由开发人员自由发挥。\n\n#### 去年的产品\n> 业务部门大神设计的产品一定很实用\n\n首先来看一下去年的设计，其实对于业务部门来说，这样的指标展示完全是他们想要的。很全面，甚至有去年今日的数据作对比，产品经理在这之前对各个业务部门调研了很久。\n![烧死产品经理](http://og3rfccos.bkt.clouddn.com/long.jpg)\n但是他们口中想要的，真的就一定是刚需吗。如果你问他们一个问题:某某指标，你们需要吗。我觉得他们一定说要。哪怕是无关紧要的指标，能看到总比看不到强。所以，如果我们一味的去满足业务部门，这一条路是行不通的。所以我们要比他们更了解业务，准确的说更要理解每一次产品的真正定义。\n\n#### 一入产品深似海\n>  站在产品的第一视角去看待问题，是每个程序员的必修课。\n\n这一次的产品设计是一个数据实时的直播间，直播间是一个大屏的设计。所谓的大屏的设计，就是能在一屏之内看到自己所关心或者说迫切知道的数据指标。\n\n关于大屏设计，当然首选阿里出品的数据可视化[datav](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)。可以随意的拖拉出一个大屏的完美结局方案。但是，你会发现，你拖出来的东西，其实并不是那么的美好。然后就会写论文一样，进入了无休止的不动版修改中。\n![不动版](http://og3rfccos.bkt.clouddn.com/11.jpg)\n永远没有定稿，要么布局不可以，要么配色不满意。最可怕的是，当你慢慢找到了合适的配色之后，突然发现应该突出的重点偏轻了。这一点，下面的文章会提到。\n\n#### 什么是好的产品\n>  定稿两个字，永远不会在字典里面出现。\n\n```\n记住，所谓的定稿，只是给用户的那一版。而对于真正的产品是没有最终稿的。\n```\n\n\n**举个例子**:大家都可能会遇到这种情况。交付用户手中的那一稿，往往是N多版本中的前几个版本。我觉得这是因为很多产品经理在慢慢的修改的过程中，突然意识到了设计方向的偏差。\n\n但是这样做，不是没有意义的。多余的版本虽然没有展示给用户，但是这些可都是对于这一次产品设计的思考。思考对于产品设计来说真的是意义重大。思考不仅仅能带来好的产品，更能加深对业务的理解，有了每次的深入的思考，下次的产品只会越来越好。\n\n\n#### 产品展示\n> 捂脸逃跑\n\n这一次的产品设计，我使用的是[sketch](http://www.sketchcn.com/)画的。借鉴的[DataV](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)上面的一些例子。\n\n其实设计的一般，好多地方都是我个人的一些理解，在内测期间，大家提出了很多建议，这一次的产品设计之旅，对于我来说，意义重大，是一次成长。也许下次和产品经理沟通的时候我会少烧死他们几次，更能帮助自己理解业务，写出更好的代码和产品来。\n\n![image](http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%811.jpg)\n\n![image](http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%812.jpg)\n\n\n\n#### 总结\n1. 一个好的产品，除了满足业务部门的需求之外，更应该让他们有惊艳的功能体验。不要一味的推出新品，也不要一味的去仅仅满足。一定要做到取舍有道，用户的使用习惯是完全可以培养出来的。\n2. 我觉得工程师都应该从产品的角度去理解自己做的东西，这样才能更好的用代码去诠释产品经理的真正意图，为后续的模块更新做好支持。\n3. 吵架的时候还是一定要吵的。该烧的也一定不要客气。\n\n\n[sketch官网](http://www.sketchcn.com/)\n\n[DataV数据可视化](https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo)","slug":"程序员当产品经理是一种什么样的体验","published":1,"updated":"2019-03-25T07:03:50.847Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjtseez5u0015muhw3rn9qptd","content":"<p>每当产品经理让我们改来改去的时候，我们的第一反映都是,把朕的五十米大刀拿来。</p>\n<a id=\"more\"></a>\n<h4 id=\"烧死产品\"><a href=\"#烧死产品\" class=\"headerlink\" title=\"烧死产品\"></a>烧死产品</h4><blockquote>\n<p>烧死产品是每个程序员的夙愿</p>\n</blockquote>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li>烧死产品</li>\n<li>故事的起因</li>\n<li>去年的产品</li>\n<li>产品深似海</li>\n<li>产品展示</li>\n<li>总结</li>\n</ul>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/project.jpg\" alt=\"烧死产品经理\"></p>\n<h4 id=\"故事的起因\"><a href=\"#故事的起因\" class=\"headerlink\" title=\"故事的起因\"></a>故事的起因</h4><p>每年的双十一，是我们电商企业的“年关”，我们开发部门都会给业务部门做一个数据直播间。能让大家实时的查看到自己负责的品牌的销售情况等，</p>\n<p>16年那一版是我们做的第一版，那一年和产品经理吵的很凶，所以产品经理罢工。秉着你行你上的原则，经过友好的20分钟会议，这一次产品只出查看指标，产品设计完全由开发人员自由发挥。</p>\n<h4 id=\"去年的产品\"><a href=\"#去年的产品\" class=\"headerlink\" title=\"去年的产品\"></a>去年的产品</h4><blockquote>\n<p>业务部门大神设计的产品一定很实用</p>\n</blockquote>\n<p>首先来看一下去年的设计，其实对于业务部门来说，这样的指标展示完全是他们想要的。很全面，甚至有去年今日的数据作对比，产品经理在这之前对各个业务部门调研了很久。<br><img src=\"http://og3rfccos.bkt.clouddn.com/long.jpg\" alt=\"烧死产品经理\"><br>但是他们口中想要的，真的就一定是刚需吗。如果你问他们一个问题:某某指标，你们需要吗。我觉得他们一定说要。哪怕是无关紧要的指标，能看到总比看不到强。所以，如果我们一味的去满足业务部门，这一条路是行不通的。所以我们要比他们更了解业务，准确的说更要理解每一次产品的真正定义。</p>\n<h4 id=\"一入产品深似海\"><a href=\"#一入产品深似海\" class=\"headerlink\" title=\"一入产品深似海\"></a>一入产品深似海</h4><blockquote>\n<p> 站在产品的第一视角去看待问题，是每个程序员的必修课。</p>\n</blockquote>\n<p>这一次的产品设计是一个数据实时的直播间，直播间是一个大屏的设计。所谓的大屏的设计，就是能在一屏之内看到自己所关心或者说迫切知道的数据指标。</p>\n<p>关于大屏设计，当然首选阿里出品的数据可视化<a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">datav</a>。可以随意的拖拉出一个大屏的完美结局方案。但是，你会发现，你拖出来的东西，其实并不是那么的美好。然后就会写论文一样，进入了无休止的不动版修改中。<br><img src=\"http://og3rfccos.bkt.clouddn.com/11.jpg\" alt=\"不动版\"><br>永远没有定稿，要么布局不可以，要么配色不满意。最可怕的是，当你慢慢找到了合适的配色之后，突然发现应该突出的重点偏轻了。这一点，下面的文章会提到。</p>\n<h4 id=\"什么是好的产品\"><a href=\"#什么是好的产品\" class=\"headerlink\" title=\"什么是好的产品\"></a>什么是好的产品</h4><blockquote>\n<p> 定稿两个字，永远不会在字典里面出现。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">记住，所谓的定稿，只是给用户的那一版。而对于真正的产品是没有最终稿的。</div></pre></td></tr></table></figure>\n<p><strong>举个例子</strong>:大家都可能会遇到这种情况。交付用户手中的那一稿，往往是N多版本中的前几个版本。我觉得这是因为很多产品经理在慢慢的修改的过程中，突然意识到了设计方向的偏差。</p>\n<p>但是这样做，不是没有意义的。多余的版本虽然没有展示给用户，但是这些可都是对于这一次产品设计的思考。思考对于产品设计来说真的是意义重大。思考不仅仅能带来好的产品，更能加深对业务的理解，有了每次的深入的思考，下次的产品只会越来越好。</p>\n<h4 id=\"产品展示\"><a href=\"#产品展示\" class=\"headerlink\" title=\"产品展示\"></a>产品展示</h4><blockquote>\n<p>捂脸逃跑</p>\n</blockquote>\n<p>这一次的产品设计，我使用的是<a href=\"http://www.sketchcn.com/\" target=\"_blank\" rel=\"external\">sketch</a>画的。借鉴的<a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">DataV</a>上面的一些例子。</p>\n<p>其实设计的一般，好多地方都是我个人的一些理解，在内测期间，大家提出了很多建议，这一次的产品设计之旅，对于我来说，意义重大，是一次成长。也许下次和产品经理沟通的时候我会少烧死他们几次，更能帮助自己理解业务，写出更好的代码和产品来。</p>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%811.jpg\" alt=\"image\"></p>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%812.jpg\" alt=\"image\"></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li>一个好的产品，除了满足业务部门的需求之外，更应该让他们有惊艳的功能体验。不要一味的推出新品，也不要一味的去仅仅满足。一定要做到取舍有道，用户的使用习惯是完全可以培养出来的。</li>\n<li>我觉得工程师都应该从产品的角度去理解自己做的东西，这样才能更好的用代码去诠释产品经理的真正意图，为后续的模块更新做好支持。</li>\n<li>吵架的时候还是一定要吵的。该烧的也一定不要客气。</li>\n</ol>\n<p><a href=\"http://www.sketchcn.com/\" target=\"_blank\" rel=\"external\">sketch官网</a></p>\n<p><a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">DataV数据可视化</a></p>\n","site":{"data":{}},"excerpt":"<p>每当产品经理让我们改来改去的时候，我们的第一反映都是,把朕的五十米大刀拿来。</p>","more":"<h4 id=\"烧死产品\"><a href=\"#烧死产品\" class=\"headerlink\" title=\"烧死产品\"></a>烧死产品</h4><blockquote>\n<p>烧死产品是每个程序员的夙愿</p>\n</blockquote>\n<h2 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h2><ul>\n<li>烧死产品</li>\n<li>故事的起因</li>\n<li>去年的产品</li>\n<li>产品深似海</li>\n<li>产品展示</li>\n<li>总结</li>\n</ul>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/project.jpg\" alt=\"烧死产品经理\"></p>\n<h4 id=\"故事的起因\"><a href=\"#故事的起因\" class=\"headerlink\" title=\"故事的起因\"></a>故事的起因</h4><p>每年的双十一，是我们电商企业的“年关”，我们开发部门都会给业务部门做一个数据直播间。能让大家实时的查看到自己负责的品牌的销售情况等，</p>\n<p>16年那一版是我们做的第一版，那一年和产品经理吵的很凶，所以产品经理罢工。秉着你行你上的原则，经过友好的20分钟会议，这一次产品只出查看指标，产品设计完全由开发人员自由发挥。</p>\n<h4 id=\"去年的产品\"><a href=\"#去年的产品\" class=\"headerlink\" title=\"去年的产品\"></a>去年的产品</h4><blockquote>\n<p>业务部门大神设计的产品一定很实用</p>\n</blockquote>\n<p>首先来看一下去年的设计，其实对于业务部门来说，这样的指标展示完全是他们想要的。很全面，甚至有去年今日的数据作对比，产品经理在这之前对各个业务部门调研了很久。<br><img src=\"http://og3rfccos.bkt.clouddn.com/long.jpg\" alt=\"烧死产品经理\"><br>但是他们口中想要的，真的就一定是刚需吗。如果你问他们一个问题:某某指标，你们需要吗。我觉得他们一定说要。哪怕是无关紧要的指标，能看到总比看不到强。所以，如果我们一味的去满足业务部门，这一条路是行不通的。所以我们要比他们更了解业务，准确的说更要理解每一次产品的真正定义。</p>\n<h4 id=\"一入产品深似海\"><a href=\"#一入产品深似海\" class=\"headerlink\" title=\"一入产品深似海\"></a>一入产品深似海</h4><blockquote>\n<p> 站在产品的第一视角去看待问题，是每个程序员的必修课。</p>\n</blockquote>\n<p>这一次的产品设计是一个数据实时的直播间，直播间是一个大屏的设计。所谓的大屏的设计，就是能在一屏之内看到自己所关心或者说迫切知道的数据指标。</p>\n<p>关于大屏设计，当然首选阿里出品的数据可视化<a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">datav</a>。可以随意的拖拉出一个大屏的完美结局方案。但是，你会发现，你拖出来的东西，其实并不是那么的美好。然后就会写论文一样，进入了无休止的不动版修改中。<br><img src=\"http://og3rfccos.bkt.clouddn.com/11.jpg\" alt=\"不动版\"><br>永远没有定稿，要么布局不可以，要么配色不满意。最可怕的是，当你慢慢找到了合适的配色之后，突然发现应该突出的重点偏轻了。这一点，下面的文章会提到。</p>\n<h4 id=\"什么是好的产品\"><a href=\"#什么是好的产品\" class=\"headerlink\" title=\"什么是好的产品\"></a>什么是好的产品</h4><blockquote>\n<p> 定稿两个字，永远不会在字典里面出现。</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">记住，所谓的定稿，只是给用户的那一版。而对于真正的产品是没有最终稿的。</div></pre></td></tr></table></figure>\n<p><strong>举个例子</strong>:大家都可能会遇到这种情况。交付用户手中的那一稿，往往是N多版本中的前几个版本。我觉得这是因为很多产品经理在慢慢的修改的过程中，突然意识到了设计方向的偏差。</p>\n<p>但是这样做，不是没有意义的。多余的版本虽然没有展示给用户，但是这些可都是对于这一次产品设计的思考。思考对于产品设计来说真的是意义重大。思考不仅仅能带来好的产品，更能加深对业务的理解，有了每次的深入的思考，下次的产品只会越来越好。</p>\n<h4 id=\"产品展示\"><a href=\"#产品展示\" class=\"headerlink\" title=\"产品展示\"></a>产品展示</h4><blockquote>\n<p>捂脸逃跑</p>\n</blockquote>\n<p>这一次的产品设计，我使用的是<a href=\"http://www.sketchcn.com/\" target=\"_blank\" rel=\"external\">sketch</a>画的。借鉴的<a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">DataV</a>上面的一些例子。</p>\n<p>其实设计的一般，好多地方都是我个人的一些理解，在内测期间，大家提出了很多建议，这一次的产品设计之旅，对于我来说，意义重大，是一次成长。也许下次和产品经理沟通的时候我会少烧死他们几次，更能帮助自己理解业务，写出更好的代码和产品来。</p>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%811.jpg\" alt=\"image\"></p>\n<p><img src=\"http://og3rfccos.bkt.clouddn.com/%E4%BA%A7%E5%93%812.jpg\" alt=\"image\"></p>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><ol>\n<li>一个好的产品，除了满足业务部门的需求之外，更应该让他们有惊艳的功能体验。不要一味的推出新品，也不要一味的去仅仅满足。一定要做到取舍有道，用户的使用习惯是完全可以培养出来的。</li>\n<li>我觉得工程师都应该从产品的角度去理解自己做的东西，这样才能更好的用代码去诠释产品经理的真正意图，为后续的模块更新做好支持。</li>\n<li>吵架的时候还是一定要吵的。该烧的也一定不要客气。</li>\n</ol>\n<p><a href=\"http://www.sketchcn.com/\" target=\"_blank\" rel=\"external\">sketch官网</a></p>\n<p><a href=\"https://data.aliyun.com/visual/datav?spm=a2c0j.7906235.header.29.Vfj7Vo\" target=\"_blank\" rel=\"external\">DataV数据可视化</a></p>"},{"title":"浅谈雪碧图和字体图标","date":"2017-11-13T07:03:50.000Z","comments":1,"_content":"\n这一次开发，没有什么特别的，就是我在小图标展示的时候。在雪碧图和图标字体中徘徊了很久。于是，简单研究了一下，就当立一个flag,日后在深究一下。\n\n\n<!--more-->\n\n#### 起因\n> 现在是前端技术的大时代。若干年过去之后，也许我们会感慨很多，当年阿当的一篇博文多么的犀利。vue和angular的闹剧。最近临危受命，要做几天的前端开发。说是前端开发，其实就是写`html+css+JavaScript`,真的，当你面对庞大的前端技术体系无所适从的时候,用最简单的技术来一场放松吧。\n\n\n\n\n\n#### 雪碧图\n>除了叫雪碧图外，它还有很多名字，css sprite, css 精灵等。原理就是将一些小图标合并到一张图片上，然后用css的背景定位来显示需要显示的部分。\n\n**工具**：\n\n[sprite-generator](https://www.toptal.com/developers/css/sprite-generator)\n\n**栗子**:\n\n*图片*\n![image](http://og3rfccos.bkt.clouddn.com/1510541347700.jpg)\n\n*定位*\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>css sprite</title>\n    <style>\n        .bg{\n            background: url(\"css_sprites .png\");\n        }\n        .bg-9 {\n            width: 262px; height: 156px;\n            background-position: -10px -10px;\n        }\n\n        .bg-10 {\n            width: 246px; height: 150px;\n            background-position: -292px -10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"bg bg-9\"></div>\n    <div class=\"bg bg-10\"></div>\n</body>\n</html>\n\n```\n*效果*\n![image](http://og3rfccos.bkt.clouddn.com/1510542402120.jpg)\n\n**优点**：\n+ 减少对服务器的请求次数`比如页面有五个图标，把他们放到一张背景图上，只需要加载一次。然后用css定位从这张图片来取就可以了`\n+ 提高页面的加载速度`减少了页面的请求次数，自然会提高了页面的加载速度`\n\n\n\n**缺点**：\n+ 维护麻烦，如果修改其中的一张图，你需要修改整张图。\n+ 高清失真，为了适应不同的分辨率，可能要准备多个规格的图片。\n\n## 图标字体\n> 可以缩放的矢量图标。你可以使用CSS对它们进行修改:大小，颜色，阴影等。体积特别的小。可能几百个图标才几十KB。\n\n**工具**：\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)是阿里提供一个矢量图标库。\n\n[fontawesome](http://fontawesome.dashgame.com/) 国外一款优秀的图标库，用bootstrap的都不陌生了。\n\n\n**栗子**:\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)和[fontawesome](http://fontawesome.dashgame.com/)官方都提供了很详细的使用教程，这里不就不做赘述了。\n简单的写了一个小[demo](https://github.com/whiney/icon-font)。可以去简单的看一下。\n\n**优点**：\n+ 高清保真，因为是SVG图形。\n+ 灵活性，可以设置大小，颜色等。\n+ [兼容性](https://caniuse.com/#feat=fontface)好，支持IE6\n+ 开源的字体库很多\n+ 减少HTTP请求\n\n**缺点**：\n+ 维护自己的字体库麻烦一些\n+ 图表字体只能被渲染为单色的\n\n\n#### 总结\n> 这篇文章只是浅谈了一些雪碧图和图标字体，没有太过的深入，也算是一篇工具介绍吧。这两种方式的出现，都是为了减少HTTP请求次数。优化和提升网页的访问速度。各有千秋。如果实际开发中，可以两种方式结合着来。\n\n[小栗子](https://github.com/whiney/icon-font)\n\n[sprite-generator](https://www.toptal.com/developers/css/sprite-generator)\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)\n\n[fontawesome](http://fontawesome.dashgame.com/)","source":"_posts/icon-font.md","raw":"---\ntitle: 浅谈雪碧图和字体图标\ndate: 2017-11-13 15:03:50\ncomments: true\ntags:\n  - 前端\n  - 随笔\ncategories: 前端观察\n---\n\n这一次开发，没有什么特别的，就是我在小图标展示的时候。在雪碧图和图标字体中徘徊了很久。于是，简单研究了一下，就当立一个flag,日后在深究一下。\n\n\n<!--more-->\n\n#### 起因\n> 现在是前端技术的大时代。若干年过去之后，也许我们会感慨很多，当年阿当的一篇博文多么的犀利。vue和angular的闹剧。最近临危受命，要做几天的前端开发。说是前端开发，其实就是写`html+css+JavaScript`,真的，当你面对庞大的前端技术体系无所适从的时候,用最简单的技术来一场放松吧。\n\n\n\n\n\n#### 雪碧图\n>除了叫雪碧图外，它还有很多名字，css sprite, css 精灵等。原理就是将一些小图标合并到一张图片上，然后用css的背景定位来显示需要显示的部分。\n\n**工具**：\n\n[sprite-generator](https://www.toptal.com/developers/css/sprite-generator)\n\n**栗子**:\n\n*图片*\n![image](http://og3rfccos.bkt.clouddn.com/1510541347700.jpg)\n\n*定位*\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>css sprite</title>\n    <style>\n        .bg{\n            background: url(\"css_sprites .png\");\n        }\n        .bg-9 {\n            width: 262px; height: 156px;\n            background-position: -10px -10px;\n        }\n\n        .bg-10 {\n            width: 246px; height: 150px;\n            background-position: -292px -10px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"bg bg-9\"></div>\n    <div class=\"bg bg-10\"></div>\n</body>\n</html>\n\n```\n*效果*\n![image](http://og3rfccos.bkt.clouddn.com/1510542402120.jpg)\n\n**优点**：\n+ 减少对服务器的请求次数`比如页面有五个图标，把他们放到一张背景图上，只需要加载一次。然后用css定位从这张图片来取就可以了`\n+ 提高页面的加载速度`减少了页面的请求次数，自然会提高了页面的加载速度`\n\n\n\n**缺点**：\n+ 维护麻烦，如果修改其中的一张图，你需要修改整张图。\n+ 高清失真，为了适应不同的分辨率，可能要准备多个规格的图片。\n\n## 图标字体\n> 可以缩放的矢量图标。你可以使用CSS对它们进行修改:大小，颜色，阴影等。体积特别的小。可能几百个图标才几十KB。\n\n**工具**：\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)是阿里提供一个矢量图标库。\n\n[fontawesome](http://fontawesome.dashgame.com/) 国外一款优秀的图标库，用bootstrap的都不陌生了。\n\n\n**栗子**:\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)和[fontawesome](http://fontawesome.dashgame.com/)官方都提供了很详细的使用教程，这里不就不做赘述了。\n简单的写了一个小[demo](https://github.com/whiney/icon-font)。可以去简单的看一下。\n\n**优点**：\n+ 高清保真，因为是SVG图形。\n+ 灵活性，可以设置大小，颜色等。\n+ [兼容性](https://caniuse.com/#feat=fontface)好，支持IE6\n+ 开源的字体库很多\n+ 减少HTTP请求\n\n**缺点**：\n+ 维护自己的字体库麻烦一些\n+ 图表字体只能被渲染为单色的\n\n\n#### 总结\n> 这篇文章只是浅谈了一些雪碧图和图标字体，没有太过的深入，也算是一篇工具介绍吧。这两种方式的出现，都是为了减少HTTP请求次数。优化和提升网页的访问速度。各有千秋。如果实际开发中，可以两种方式结合着来。\n\n[小栗子](https://github.com/whiney/icon-font)\n\n[sprite-generator](https://www.toptal.com/developers/css/sprite-generator)\n\n[iconfont](http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2)\n\n[fontawesome](http://fontawesome.dashgame.com/)","slug":"icon-font","published":1,"updated":"2019-03-25T07:04:16.135Z","layout":"post","photos":[],"link":"","_id":"cjtseez5w0017muhwjs827jdw","content":"<p>这一次开发，没有什么特别的，就是我在小图标展示的时候。在雪碧图和图标字体中徘徊了很久。于是，简单研究了一下，就当立一个flag,日后在深究一下。</p>\n<a id=\"more\"></a>\n<h4 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h4><blockquote>\n<p>现在是前端技术的大时代。若干年过去之后，也许我们会感慨很多，当年阿当的一篇博文多么的犀利。vue和angular的闹剧。最近临危受命，要做几天的前端开发。说是前端开发，其实就是写<code>html+css+JavaScript</code>,真的，当你面对庞大的前端技术体系无所适从的时候,用最简单的技术来一场放松吧。</p>\n</blockquote>\n<h4 id=\"雪碧图\"><a href=\"#雪碧图\" class=\"headerlink\" title=\"雪碧图\"></a>雪碧图</h4><blockquote>\n<p>除了叫雪碧图外，它还有很多名字，css sprite, css 精灵等。原理就是将一些小图标合并到一张图片上，然后用css的背景定位来显示需要显示的部分。</p>\n</blockquote>\n<p><strong>工具</strong>：</p>\n<p><a href=\"https://www.toptal.com/developers/css/sprite-generator\" target=\"_blank\" rel=\"external\">sprite-generator</a></p>\n<p><strong>栗子</strong>:</p>\n<p><em>图片</em><br><img src=\"http://og3rfccos.bkt.clouddn.com/1510541347700.jpg\" alt=\"image\"></p>\n<p><em>定位</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;css sprite&lt;/title&gt;</div><div class=\"line\">    &lt;style&gt;</div><div class=\"line\">        .bg&#123;</div><div class=\"line\">            background: url(&quot;css_sprites .png&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        .bg-9 &#123;</div><div class=\"line\">            width: 262px; height: 156px;</div><div class=\"line\">            background-position: -10px -10px;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        .bg-10 &#123;</div><div class=\"line\">            width: 246px; height: 150px;</div><div class=\"line\">            background-position: -292px -10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">    &lt;div class=&quot;bg bg-9&quot;&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;bg bg-10&quot;&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p><em>效果</em><br><img src=\"http://og3rfccos.bkt.clouddn.com/1510542402120.jpg\" alt=\"image\"></p>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>减少对服务器的请求次数<code>比如页面有五个图标，把他们放到一张背景图上，只需要加载一次。然后用css定位从这张图片来取就可以了</code></li>\n<li>提高页面的加载速度<code>减少了页面的请求次数，自然会提高了页面的加载速度</code></li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>维护麻烦，如果修改其中的一张图，你需要修改整张图。</li>\n<li>高清失真，为了适应不同的分辨率，可能要准备多个规格的图片。</li>\n</ul>\n<h2 id=\"图标字体\"><a href=\"#图标字体\" class=\"headerlink\" title=\"图标字体\"></a>图标字体</h2><blockquote>\n<p>可以缩放的矢量图标。你可以使用CSS对它们进行修改:大小，颜色，阴影等。体积特别的小。可能几百个图标才几十KB。</p>\n</blockquote>\n<p><strong>工具</strong>：</p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a>是阿里提供一个矢量图标库。</p>\n<p><a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a> 国外一款优秀的图标库，用bootstrap的都不陌生了。</p>\n<p><strong>栗子</strong>:</p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a>和<a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a>官方都提供了很详细的使用教程，这里不就不做赘述了。<br>简单的写了一个小<a href=\"https://github.com/whiney/icon-font\" target=\"_blank\" rel=\"external\">demo</a>。可以去简单的看一下。</p>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>高清保真，因为是SVG图形。</li>\n<li>灵活性，可以设置大小，颜色等。</li>\n<li><a href=\"https://caniuse.com/#feat=fontface\" target=\"_blank\" rel=\"external\">兼容性</a>好，支持IE6</li>\n<li>开源的字体库很多</li>\n<li>减少HTTP请求</li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>维护自己的字体库麻烦一些</li>\n<li>图表字体只能被渲染为单色的</li>\n</ul>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><blockquote>\n<p>这篇文章只是浅谈了一些雪碧图和图标字体，没有太过的深入，也算是一篇工具介绍吧。这两种方式的出现，都是为了减少HTTP请求次数。优化和提升网页的访问速度。各有千秋。如果实际开发中，可以两种方式结合着来。</p>\n</blockquote>\n<p><a href=\"https://github.com/whiney/icon-font\" target=\"_blank\" rel=\"external\">小栗子</a></p>\n<p><a href=\"https://www.toptal.com/developers/css/sprite-generator\" target=\"_blank\" rel=\"external\">sprite-generator</a></p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a></p>\n<p><a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a></p>\n","site":{"data":{}},"excerpt":"<p>这一次开发，没有什么特别的，就是我在小图标展示的时候。在雪碧图和图标字体中徘徊了很久。于是，简单研究了一下，就当立一个flag,日后在深究一下。</p>","more":"<h4 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h4><blockquote>\n<p>现在是前端技术的大时代。若干年过去之后，也许我们会感慨很多，当年阿当的一篇博文多么的犀利。vue和angular的闹剧。最近临危受命，要做几天的前端开发。说是前端开发，其实就是写<code>html+css+JavaScript</code>,真的，当你面对庞大的前端技术体系无所适从的时候,用最简单的技术来一场放松吧。</p>\n</blockquote>\n<h4 id=\"雪碧图\"><a href=\"#雪碧图\" class=\"headerlink\" title=\"雪碧图\"></a>雪碧图</h4><blockquote>\n<p>除了叫雪碧图外，它还有很多名字，css sprite, css 精灵等。原理就是将一些小图标合并到一张图片上，然后用css的背景定位来显示需要显示的部分。</p>\n</blockquote>\n<p><strong>工具</strong>：</p>\n<p><a href=\"https://www.toptal.com/developers/css/sprite-generator\" target=\"_blank\" rel=\"external\">sprite-generator</a></p>\n<p><strong>栗子</strong>:</p>\n<p><em>图片</em><br><img src=\"http://og3rfccos.bkt.clouddn.com/1510541347700.jpg\" alt=\"image\"></p>\n<p><em>定位</em><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html lang=&quot;en&quot;&gt;</div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class=\"line\">    &lt;title&gt;css sprite&lt;/title&gt;</div><div class=\"line\">    &lt;style&gt;</div><div class=\"line\">        .bg&#123;</div><div class=\"line\">            background: url(&quot;css_sprites .png&quot;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        .bg-9 &#123;</div><div class=\"line\">            width: 262px; height: 156px;</div><div class=\"line\">            background-position: -10px -10px;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        .bg-10 &#123;</div><div class=\"line\">            width: 246px; height: 150px;</div><div class=\"line\">            background-position: -292px -10px;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &lt;/style&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">    &lt;div class=&quot;bg bg-9&quot;&gt;&lt;/div&gt;</div><div class=\"line\">    &lt;div class=&quot;bg bg-10&quot;&gt;&lt;/div&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n<p><em>效果</em><br><img src=\"http://og3rfccos.bkt.clouddn.com/1510542402120.jpg\" alt=\"image\"></p>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>减少对服务器的请求次数<code>比如页面有五个图标，把他们放到一张背景图上，只需要加载一次。然后用css定位从这张图片来取就可以了</code></li>\n<li>提高页面的加载速度<code>减少了页面的请求次数，自然会提高了页面的加载速度</code></li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>维护麻烦，如果修改其中的一张图，你需要修改整张图。</li>\n<li>高清失真，为了适应不同的分辨率，可能要准备多个规格的图片。</li>\n</ul>\n<h2 id=\"图标字体\"><a href=\"#图标字体\" class=\"headerlink\" title=\"图标字体\"></a>图标字体</h2><blockquote>\n<p>可以缩放的矢量图标。你可以使用CSS对它们进行修改:大小，颜色，阴影等。体积特别的小。可能几百个图标才几十KB。</p>\n</blockquote>\n<p><strong>工具</strong>：</p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a>是阿里提供一个矢量图标库。</p>\n<p><a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a> 国外一款优秀的图标库，用bootstrap的都不陌生了。</p>\n<p><strong>栗子</strong>:</p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a>和<a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a>官方都提供了很详细的使用教程，这里不就不做赘述了。<br>简单的写了一个小<a href=\"https://github.com/whiney/icon-font\" target=\"_blank\" rel=\"external\">demo</a>。可以去简单的看一下。</p>\n<p><strong>优点</strong>：</p>\n<ul>\n<li>高清保真，因为是SVG图形。</li>\n<li>灵活性，可以设置大小，颜色等。</li>\n<li><a href=\"https://caniuse.com/#feat=fontface\" target=\"_blank\" rel=\"external\">兼容性</a>好，支持IE6</li>\n<li>开源的字体库很多</li>\n<li>减少HTTP请求</li>\n</ul>\n<p><strong>缺点</strong>：</p>\n<ul>\n<li>维护自己的字体库麻烦一些</li>\n<li>图表字体只能被渲染为单色的</li>\n</ul>\n<h4 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h4><blockquote>\n<p>这篇文章只是浅谈了一些雪碧图和图标字体，没有太过的深入，也算是一篇工具介绍吧。这两种方式的出现，都是为了减少HTTP请求次数。优化和提升网页的访问速度。各有千秋。如果实际开发中，可以两种方式结合着来。</p>\n</blockquote>\n<p><a href=\"https://github.com/whiney/icon-font\" target=\"_blank\" rel=\"external\">小栗子</a></p>\n<p><a href=\"https://www.toptal.com/developers/css/sprite-generator\" target=\"_blank\" rel=\"external\">sprite-generator</a></p>\n<p><a href=\"http://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2\" target=\"_blank\" rel=\"external\">iconfont</a></p>\n<p><a href=\"http://fontawesome.dashgame.com/\" target=\"_blank\" rel=\"external\">fontawesome</a></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjtseez4b0000muhw7x2plooj","category_id":"cjtseez4h0002muhwkrb4obbr","_id":"cjtseez4o000amuhwtt10oxej"},{"post_id":"cjtseez4f0001muhwj53ij3ec","category_id":"cjtseez4m0007muhwhga1658n","_id":"cjtseez4p000dmuhwm2uko8t2"},{"post_id":"cjtseez4j0004muhwgfo240rq","category_id":"cjtseez4o000bmuhwn3z8algz","_id":"cjtseez4q000imuhwn7bi5ztm"},{"post_id":"cjtseez4k0005muhw93h9ndy6","category_id":"cjtseez4p000emuhw2yol44kn","_id":"cjtseez4s000lmuhwkh3oh75y"},{"post_id":"cjtseez4l0006muhwle2mmiz4","category_id":"cjtseez4m0007muhwhga1658n","_id":"cjtseez4s000omuhw97w250eu"},{"post_id":"cjtseez5n000xmuhwmjvdlxo0","category_id":"cjtseez4m0007muhwhga1658n","_id":"cjtseez5v0016muhwkm0bbb9w"},{"post_id":"cjtseez5q000zmuhwg73txotc","category_id":"cjtseez5u0014muhw4d81texx","_id":"cjtseez5z001bmuhwthurylbp"},{"post_id":"cjtseez5s0012muhwet2l4109","category_id":"cjtseez5y0019muhw94q56h3j","_id":"cjtseez61001gmuhw17zzr7if"},{"post_id":"cjtseez5u0015muhw3rn9qptd","category_id":"cjtseez5z001dmuhwphleeft9","_id":"cjtseez62001jmuhwa2ydqowf"},{"post_id":"cjtseez5w0017muhwjs827jdw","category_id":"cjtseez61001hmuhwsfdy97d9","_id":"cjtseez63001nmuhwwnt2hize"}],"PostTag":[{"post_id":"cjtseez4b0000muhw7x2plooj","tag_id":"cjtseez4j0003muhwx9fpyiv8","_id":"cjtseez4n0009muhwgn5x8ql6"},{"post_id":"cjtseez4f0001muhwj53ij3ec","tag_id":"cjtseez4m0008muhwo1bpa4cd","_id":"cjtseez4p000gmuhwxpjss4xw"},{"post_id":"cjtseez4f0001muhwj53ij3ec","tag_id":"cjtseez4o000cmuhw7suj4gg4","_id":"cjtseez4q000hmuhw6eibgh1h"},{"post_id":"cjtseez4j0004muhwgfo240rq","tag_id":"cjtseez4p000fmuhwx671z1a3","_id":"cjtseez4s000nmuhwf2192onz"},{"post_id":"cjtseez4j0004muhwgfo240rq","tag_id":"cjtseez4q000kmuhwgezftbz2","_id":"cjtseez4t000pmuhw1a672iwb"},{"post_id":"cjtseez4k0005muhw93h9ndy6","tag_id":"cjtseez4s000mmuhws8b7ki3a","_id":"cjtseez4t000smuhw3duo2rlz"},{"post_id":"cjtseez4k0005muhw93h9ndy6","tag_id":"cjtseez4t000qmuhwpouino6t","_id":"cjtseez4t000tmuhwoehcd89q"},{"post_id":"cjtseez4l0006muhwle2mmiz4","tag_id":"cjtseez4t000rmuhwtnb5you0","_id":"cjtseez4u000vmuhwoaa5rr3s"},{"post_id":"cjtseez4l0006muhwle2mmiz4","tag_id":"cjtseez4t000umuhw2oqm8dvl","_id":"cjtseez4u000wmuhwh1e29ckf"},{"post_id":"cjtseez5n000xmuhwmjvdlxo0","tag_id":"cjtseez5s0011muhwqelmmsqw","_id":"cjtseez5z001cmuhw5wf306if"},{"post_id":"cjtseez5n000xmuhwmjvdlxo0","tag_id":"cjtseez5x0018muhw7cpkmn4g","_id":"cjtseez60001emuhw6kstcqae"},{"post_id":"cjtseez5q000zmuhwg73txotc","tag_id":"cjtseez5y001amuhw173jw2g5","_id":"cjtseez62001kmuhwtoh1dtw5"},{"post_id":"cjtseez5q000zmuhwg73txotc","tag_id":"cjtseez60001fmuhw5emqy7jk","_id":"cjtseez62001lmuhwetlmc9u1"},{"post_id":"cjtseez5s0012muhwet2l4109","tag_id":"cjtseez62001imuhw5b495fu8","_id":"cjtseez63001omuhw1i7r7dul"},{"post_id":"cjtseez5u0015muhw3rn9qptd","tag_id":"cjtseez62001mmuhw4oz9tq6c","_id":"cjtseez63001qmuhwkdckqzuc"},{"post_id":"cjtseez5w0017muhwjs827jdw","tag_id":"cjtseez63001pmuhwyaplcbcb","_id":"cjtseez64001smuhw1w39ic6f"},{"post_id":"cjtseez5w0017muhwjs827jdw","tag_id":"cjtseez63001rmuhwb1jl36ss","_id":"cjtseez64001tmuhwbnbqp8m4"}],"Tag":[{"name":"计划","_id":"cjtseez4j0003muhwx9fpyiv8"},{"name":"马克李维","_id":"cjtseez4m0008muhwo1bpa4cd"},{"name":"国外著作","_id":"cjtseez4o000cmuhw7suj4gg4"},{"name":"elasticsearch","_id":"cjtseez4p000fmuhwx671z1a3"},{"name":"api","_id":"cjtseez4q000kmuhwgezftbz2"},{"name":"springboot","_id":"cjtseez4s000mmuhws8b7ki3a"},{"name":"swagger","_id":"cjtseez4t000qmuhwpouino6t"},{"name":"杨绛","_id":"cjtseez4t000rmuhwtnb5you0"},{"name":"亲情","_id":"cjtseez4t000umuhw2oqm8dvl"},{"name":"心理学","_id":"cjtseez5s0011muhwqelmmsqw"},{"name":"厚黑","_id":"cjtseez5x0018muhw7cpkmn4g"},{"name":"机器学习","_id":"cjtseez5y001amuhw173jw2g5"},{"name":"大数据","_id":"cjtseez60001fmuhw5emqy7jk"},{"name":"总结","_id":"cjtseez62001imuhw5b495fu8"},{"name":"产品设计","_id":"cjtseez62001mmuhw4oz9tq6c"},{"name":"前端","_id":"cjtseez63001pmuhwyaplcbcb"},{"name":"随笔","_id":"cjtseez63001rmuhwb1jl36ss"}]}}